@database English/FileX.guide

@Master English/FileX.texi

@Width 72


This is the AmigaGuide® file English/FileX.guide, produced by Makeinfo-1.55 from 
the input file English/FileX.texi.


@Node Main "English/FileX.guide"
@Next "What is FileX?"

                                   
              $VER: FileXDocumentation 2.7 (12 Jun 2014)

                                   
                        FileX - A binary editor

               © Copyright 1993-2004 by Klaas Hermanns.

                     © Copyright Open Source Team.

    Released under GNU General Public License, all rights reserved.


 @{" What is FileX? " Link "What is FileX?"} 
 @{" Getting started " Link "Getting started"} 
 @{" The menus " Link "The menus"} 
 @{" The ARexxport " Link "The ARexxport"} 
 @{" Todo " Link "Todo"} 
 @{" Please note " Link "Please note"} 
 @{" Acknowledgments " Link "Acknowledgments"} 
 @{" License " Link "License"} 
 @{" Using the source code " Link "Using the source code"} 
 @{" Localization " Link "Localization"} 
 @{" Contactaddress " Link "Contactaddress"} 
 @{" History " Link "History"} 


@EndNode

@Node "What is FileX?" "FileX.guide/What is FileX?"
@Next "Getting started"
@Prev "Main"
@Toc "Main"

What is FileX?
**************

   FileX is a binary file editor which offers the following features:

   - Several files can be modified in several windows and/or views at
     the same time.

   - The edit windows can be opened on any public screen and sized to
     any dimension you want.

   - Small calculator

   - Clipboard converter

   - Fontsensitivity

   - Locale support if you have OS 2.1 or higher. (English, Finnish,
     French, German, Swedish (Dutch, Norwegian (not yet included)))

   - Undo and Redo (only limited to your free memory)

   - Search and replace with history

   - Extensive blockfunctions

   - ARexxport with 77 commands and asynchronical command shell

   - Printing as hexdump

   - `Grab memory' to show and modify memory

   - AppWindow. If FileX runs on the workbench, icons can be moved onto
     the FileX window and the related file will be loaded automatically.

   - Iconify

   - Moreover, FileX will be developed further permanently...


@EndNode

@Node "Getting started" "FileX.guide/Getting started"
@Next "The menus"
@Prev "What is FileX?"
@Toc "Main"

Getting started
***************

Getting started from workbench
==============================

   Starting FileX from the workbench, the following tooltypes will be
interrogated:

COMMANDS
     Name of the ARexxcommandsettings. If this tooltype is not
     specified, FileX tries to open `FileXARexxCommands.prefs' from the
     current directory. When that fails, the file
     `ENVARC:FileX/FileXARexxCommands.prefs' will be opened. If this
     file doesn't exist, too, the ARexxcommands will remain unset.

FILE
     A filename that shall be opened right after starting FileX.

LANGUAGE
     Specifies the language that should be used in the programm.  By
     default the language from the Workbench Preferences is used.

PORTNAME
     Name of the FileX ARexxport. If the port with the specified name
     does already exist, the program automatically adds a number to the
     name and increases it until a non-existing portname is found.
     (`NAME'->`NAME.1'->`NAME.2'). Standardname: `FILEX'.

PUBSCREEN
     Name of a public screen on which FileX shall be opened on.  If
     this tooltype is not specified, FileX will open a window on the
     standard public screen.

SETTINGS
     Name of the settingsfile to be loaded at the beginning.  If there
     is no name specified, the program tries to open the file
     `FileX.prefs' in the current directory. If that fails,
     `ENVARC:FileX/FileX.prefs' will be tried to open.  If this file
     could not be opened, too, FileX uses the internal settings.

STARTUP
     Name of an ARexxscript that will be executed right at the start.

How to start from CLI
=====================

   Following arguments will be checked:

COMMANDS/K
LANGUAGE/K
PORTNAME/K
PUBSCREEN/K
SETTINGS/K
STARTUP/K
     These tooltypes correspond to the ones for the workbench start.

SYNC/S
     This tooltype forces FileX not to detach from Shell.


@EndNode

@Node "The menus" "FileX.guide/The menus"
@Next "The ARexxport"
@Prev "Getting started"
@Toc "Main"

The menus
*********

Project
=======

New...
     Removes the current file from memory.

Open...
     Opens a new file in the current view.

Open previously loaded...
     Opens a requester that shows you all files that have been loaded
     since the starting of the program. By choosing one the file will
     be opend again.

Save
     Saves the current file with its current name. A filerequester will
     be opened if no name has been specified.

Save As...
     Saves the current file with a new name.

View
    New
          If there is enough room within the window, a new view will be
          created. The current view will then be split into two
          sections.

    Split
          This will divide the current view into two sections.

    Next
          The next view will be activated.

    Previous
          The Previous view will be activated.

    Expand
          The current view will be brought to the maximum possible size.
          All the other views will be only one line tall.

    Grow
          If possible, the current view will grow one line.

    Shrink
          If possible, the current view will shrink one line.

    Save and Close
          The current view's file will be saved and the view itself
          will be closed. If there is no view remaining, FileX will be
          quit.

    Close
          The current view will be closed. If it's the last view of a
          file, a saftey requester will appear. If it's the very last
          view, FileX will be quit.

    New
          A new window to edit files will be opened.

    Split to
          This will open a new window (and view) to edit the same file
          as in the current view.

    Next
          The next FileX edit window will be activated.

    Previous
          The previous Filex edit window will be activated.

    Close
          The edit window will be closed. If the file has been modified
          so far, a requester to confirm will appear.

Grab memory
     Opens the `Grab memory' requester, which allows to show and modify
     memory. To specify the memory range, use the two gadgets and click
     'OK' to continue. The shown memory may be modified like a usual
     file.

Print
     Prints the whole file as hexdump form.

Iconify
     Iconifies FileX. All windows will be closed and the FileX icon
     appears on the workbench. By double-clicking on this icon or
     moving an other icon over it, FileX will be reactivated.

About...
     Some more or less important informations about FileX.

Quit...
     Quits FileX.

Edit
====

Mark Block
     Switches block-marking on/off.

Cut
     Cuts the current marked block out of the file and copies it into
     the blockbuffer.

Copy
     Copies the current marked block into the blockbuffer.

Fill
     Fills the current marked block. The `fill' requester appears to
     specify the filling pattern .

Paste
     Overwrites the file beginning at the current cursorposition with
     the block from the blockbuffer. If this block is longer than the
     rest of the current file, a requester will appear and ask if it's
     okay to copy the block anyway.

Insert
     Inserts (again beginning at the current cursor position) the block
     from the blockbuffer to the file. As a result, the file will
     become larger.

Append
     Adds the block from the blockbuffer to the end of the file.

Print
     Prints the block from the blockbuffer as hexdump.

Load block...
     Loads a block into the blockbuffer.

Save block...
     Saves a block from the blockbuffer as a new file.

Undo
     Executes Undo once. This will revoke the last changes.

Redo
     Executes Redo once. This will retract the last UNDO(s).

Switch
     Switches between ascii and hex.

Search and replace
==================

Search...
     This will open a requester to search for a string or hex string.
     There are two string gadgets within the requester to specify
     search and replace string. Using the four switches, you can select
     various options or search modes:

    Casesensitiv
          If set, the search option will search case sensitive.

    Wildcards
          If set, the question mark ('?') may be used as wildcard.

    Stringsearch
          If set, FileX will search for a string. Otherwise, the search
          string will be interpreted as hex string.  The following
          characters are allowed: 'A'-'F', '0'-'9' and spaces (' ').
          Example: '46a7Fc32 08'.

    Replace
          If set, the search and replace mode will be activated. If the
          string is found, a requester will appear if you want the
          replace string to be inserted.  Pressing 'Next' oder
     'Previous' will start the search process by searching forwards or
     backwards.

Search and replace..
     Opens the 'search' requester to search for a string or hexnumber.

Search(and replace) next
     Repeats the search(and replace)-action towards the end of the file.

Search(and replace) previous
     Repeats the search(and replace)-action towards the beginning of
     the file.

Settings
========

Adjust Windowsize
     The window will be made smaller that the space between bevelbox
     and windowborder disappears. If there are several views with
     different settings in one window, free spaces may still exist
     nevertheless.

Display
     Defines which translationtable is being used to display the ascii
     characters:

    Characters
          Only letters will be shown. The rest is filled with spaces.

    ASCII ($20-$7F)
          Only show Hex $20-$7f.

    all
          All characters and the related Ascii-characters will be shown.

    User defined
          Use a self-defined translationtable to display.

    Load...
          Load the defined translationstable. A 256 bytes file will be
          loaded which assings every byte an Ascii character. This
          intends the first byte of this file tells FileX the number of
          the ascii-character of byte 00. The second byte determines the
          ascii-value of the byte 01 and so on.

Font...
     Opens a fontrequester to choose a font for the current window.
     Every new window will get this font, too. Other allready existing
     windows keep their old font.

Screen
     Definitions of the screen FileX shall be opened on:

    Default public
          The default public screen.

    Workbench
          The workbench screen.

    Public...
          A public screen. A requester to choose it appears.

    Own public...
          An own FileX public screen. A requester to choose the
          screenmode appears. If you don't have at least OS 2.1 or the
          Reqtools library this function is not available.

Palette...
     Opens a paletterequester to set the colors. Requires Reqtools
     library!  The adjusted colours will only be saved, if you are on
     an own screen.

Miscellaneous...
     Opens the Miscellaneous requester to define some other things for
     FileX:

    Altjump
          Number of lines the cursor will move with Alt-cursorup/down.

    Scroll border
          Distance to the upper/lower border from which the view will be
          scrolled.

    Max undo level
          Maximum number of undo levels.

    Max undo mem
          Maximum memory used for undo/redo.

    Clipboard unit
          Clipboard unit used for the blockmemory.

    Program priority
          Priority of the program. Usually only values between -20 and
          20 make sense.

    Use asl.library
          If set, the Asl library will be used for the file and font
          requesters. All information requesters are created with the
          Intuition library. Normally the Reqtools library is used for
          all requesters.

    Overwrite
          If set, a requester to ask you if a allready existing file
          should be overwritten will NOT appear.

    Command shell window
          Settings for the command shell window.

    Command window
          Settings for the window that shall be used for the execution
          of ARexxscripts.

    Display
          This defines in which form the file shall be diplayed. It can
          be chosen between Hex and Ascii display.

    Spaces
          Here it's possible to choose how many Bytes shall be shown as
          a block. You may specify byte, word and longword blocks. It is
          also possible to define no spaces between the blocks.

Load Settings...
     Loads a settingsfile.

Save Settings
     Saves the settings under the current name.

Save Settings As...
     Saves the settings under a new name.

Move
====

Jump to byte...
     Moves the cursor to an defined position in the file.

Mark location...
     Marks the current cursor position. A requester asks which number
     that mark shall be (1-10 possible). Each file has ten different
     marks.

Jump to mark...
     After typing the number (1-10) into the appering requester, the
     cursor will be set to the stored position.

ARexx
=====

Command shell...
     Opens a command shell. Within this shell you may give easy
     ARexxcommands to FileX. The result(s) will be displayed at once.
     You can go on working with FileX simultaneous.

Execute command...
     Executes an ARexxscript. Again a requester to choose the name will
     be opened.

Assign command...
     An ARexxscript will be assigned to one of the 10 menu items.  One
     of the 10 menu items will be assigned an ARexxscript.  A
     filerequester to choose the name and another requester to chose
     the number (0-9) appear.

Empty command #[0-9]
     10 menu items to be filled with ARexxscripts that shall be quickly
     executable.

Load commands...
     Loads a settingsfile for the ARexxscripts. If the files
     `FileXARexxCommands.prefs' and
     `ENVARC:FileX/FileXARexxCommands.prefs' could not be found, the
     ARexxcommands remain unset.

Save commands
     Saves the commands under the current name.

Save commands as...
     Saves the commands under a new name.

Misc
====

Open calculator...
     Opens a small calculator. The cycle gadget or the cursorup/-down
     key change the numbersystem. The gadgets '>' and '<' copy the
     current figure into the clipboard or to move a figure from the
     clipboard in the calculator. The Plus/Minus gadget or the '.' key
     change the sign of the figure. With the backspace key you may
     delete the last entered number and with the DEL key you may whipe
     out the whole figure. Space activates the edit window again.

     Note: If you miss an ON or AC key, use the '=' key. It has the
     same function with the slight difference that the display won't be
     cleared.

Open clipboard converter...
     The Clipboard converter is a powerful tool, but very simple to use.
     It can be used for converting numbers into raw bytes and vice
     versa.

     With the upper cycle gadget you can adjust as what the current
     clipboard contents shall be interpreted. The display on the right
     shows the contents. You can choose 'Bin'ary, 'Dec'imal,
     'Hex'adecimal, 'Oct'al, 'Raw' for the raw, not interpreted
     contents, and 'Text'. The only difference between 'Raw' and 'Text'
     is the display. 'Raw' shows the contents in hex, 'Text' as a text.

     The lower cycle gadget defines, to what the current contents should
     be converted to. The display on the right shows the result, a
     conversion would bring. A click on 'Convert' and the contents will
     be converted.

     What about a simple example:

     The clipboard contains the string "6265 7374". The insertion of
     the contents into the shell would show the text "6265 7374". The
     insertion into FileX would show on the right, in the ascii area,
     the text "6265 7374", too. If you want to insert it on the left,
     you can use the clipboard converter. Simply switch the contents to
     'Hex' and the target to 'Raw' and press convert. The upper display
     shows 'not valid' now because there is no hex string in the
     clipboard anymore. An insertion into FileX would show the value
     "62657374" on the left side now.


@EndNode

@Node "The ARexxport" "FileX.guide/The ARexxport"
@Next "Todo"
@Prev "The menus"
@Toc "Main"

The ARexxport
*************

   FileX has got an ARexxport with 77 commands. The documentation about
that feature can be found in the file `FileXARexx.doc' resp.
`FileXARexx.guide'. Some example programs are stored in the ARexx
directory.


@EndNode

@Node "Todo" "FileX.guide/Todo"
@Next "Please note"
@Prev "The ARexxport"
@Toc "Main"

Future.
*******

   Unfortunately i (Pavel Fedin) do not have time to work much on
FileX. It uses GadTools-based user interface so expanding this program
may require major rewrites; it will be even make sense to rewrite it
completely with use of MUI.  This would require a lot of time and
efforts. So i can't promise any future releases.

   Still, here is an original to-do list from Klaas Hermanns, the
original author.  If someone wishes to implement something of this, he
is welcome:

   - Onlinehelp

   - XPK support

   - Edit on device.

   Also german documentation and language catalogs (except english and
russian) were left as were in version 2.0 because i don't know these
languages. Catalogs are backwards-compatible, this version of FileX can
use them.


@EndNode

@Node "Please note" "FileX.guide/Please note"
@Next "Acknowledgments"
@Prev "Todo"
@Toc "Main"

Please note:
************

   For the file, font, screemode and the palette requester as well as
all other requesters the Reqtools library may be used, which is
copyrighted © bei Nico François.

   The program `ARexxBox' by Michael Balzer was used to create the
basis of the ARexxport.


@EndNode

@Node "Acknowledgments" "FileX.guide/Acknowledgments"
@Next "License"
@Prev "Please note"
@Toc "Main"

Acknowledgments
***************

Robert Gorthsmanns, Thomas Hornik, Thomas Hertz and Jörg Groenewald
     for the betatesting

Benjamin Schörner
     for the betatesting and the (very quick and dirty) English
     translation of the documentation.

Reinhard Geisler
     for the COCUNI(++ 49-02832-80861, the best box at the Niederrhein)!

Michael Balzer
     for his ARexxBox.

Nico François
     for his Reqtools library.

SAS
     for their superb C-Developmentsystem.

Luca 'Hexaae' Longone and Klaas Hermanns
     for transferring the source code to me and enabling me to release
     this program under GNU GPL.


@EndNode

@Node "License" "FileX.guide/License"
@Next "Using the source code"
@Prev "Acknowledgments"
@Toc "Main"

License
*******

   GNU GENERAL PUBLIC LICENSE

   Version 2, June 1991

   Copyright (C) 1989, 1991 Free Software Foundation, Inc.  675
Mass Ave, Boston, MA 02111-1307, USA

   Everyone is permitted to copy and distribute verbatim copies      of
this license document, but changing it is not allowed.

   Preamble ========

   The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software-to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

   When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it in
new free programs; and that you know you can do these things.

   To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

   For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

   We protect your rights with two steps: (1) copyright the software,
and (2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

   Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on,
we want its recipients to know that what they have is not the original,
so that any problems introduced by others will not reflect on the
original authors' reputations.

   Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

   The precise terms and conditions for copying, distribution and
modification follow.

   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

   0. This License applies to any program or other work which contains a
    notice placed by the copyright holder saying it may be distributed
    under the terms of this General Public License.  The "Program",
 below, refers to any such program or work, and a "work based on
the Program" means either the Program or any derivative work under
copyright law: that is to say, a work containing the Program or a
portion of it, either verbatim or with modifications and/or
translated into another language.  (Hereinafter, translation is
included without limitation in the term "modification".)  Each
licensee is addressed as "you".

   Activities other than copying, distribution and modification are
not covered by this License; they are outside its scope.  The act
of running the Program is not restricted, and the output from the
Program is covered only if its contents constitute a work based on
the Program (independent of having been made by running the
Program).  Whether that is true depends on what the Program does.

   1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any
warranty; and give any other recipients of the Program a copy of
this License along with the Program.

   You may charge a fee for the physical act of transferring a copy,
 and you may at your option offer warranty protection in exchange
for a fee.

   2. You may modify your copy or copies of the Program or any portion
   of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

   a. You must cause the modified files to carry prominent notices
    stating that you changed the files and the date of any change.

   b. You must cause any work that you distribute or publish, that
    in whole or in part contains or is derived from the Program
  or any part thereof, to be licensed as a whole at no charge
to all third parties under the terms of this License.

   c. If the modified program normally reads commands interactively
     when run, you must cause it, when started running for such
  interactive use in the most ordinary way, to print or display
  an announcement including an appropriate copyright notice and
  a notice that there is no warranty (or else, saying that you
 provide a warranty) and that users may redistribute the
program under these conditions, and telling the user how to
view a copy of this License.  (Exception: if the Program
itself is interactive but does not normally print such an
announcement, your work based on the Program is not required
to print an announcement.)

   These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the
Program, and can be reasonably considered independent and separate
works in themselves, then this License, and its terms, do not
apply to those sections when you distribute them as separate
works.  But when you distribute the same sections as part of a
whole which is a work based on the Program, the distribution of
the whole must be on the terms of this License, whose permissions
for other licensees extend to the entire whole, and thus to each
and every part regardless of who wrote it.

   Thus, it is not the intent of this section to claim rights or
contest your rights to work written entirely by you; rather, the
intent is to exercise the right to control the distribution of
derivative or collective works based on the Program.

   In addition, mere aggregation of another work not based on the
Program with the Program (or with a work based on the Program) on
a volume of a storage or distribution medium does not bring the
other work under the scope of this License.

   3. You may copy and distribute the Program (or a work based on it,
  under Section 2) in object code or executable form under the terms
  of Sections 1 and 2 above provided that you also do one of the
following:

   a. Accompany it with the complete corresponding machine-readable
     source code, which must be distributed under the terms of
 Sections 1 and 2 above on a medium customarily used for
software interchange; or,

   b. Accompany it with a written offer, valid for at least three
   years, to give any third party, for a charge no more than your
    cost of physically performing source distribution, a complete
    machine-readable copy of the corresponding source code, to be
    distributed under the terms of Sections 1 and 2 above on a
 medium customarily used for software interchange; or,

   c. Accompany it with the information you received as to the offer
      to distribute corresponding source code.  (This alternative is
       allowed only for noncommercial distribution and only if you
     received the program in object code or executable form with
   such an offer, in accord with Subsection b above.)

   The source code for a work means the preferred form of the work for
   making modifications to it.  For an executable work, complete
source code means all the source code for all modules it contains,
plus any associated interface definition files, plus the scripts
used to control compilation and installation of the executable.
However, as a special exception, the source code distributed need
not include anything that is normally distributed (in either
source or binary form) with the major components (compiler,
kernel, and so on) of the operating system on which the executable
runs, unless that component itself accompanies the executable.

   If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

   4. You may not copy, modify, sublicense, or distribute the Program
  except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this
License.  However, parties who have received copies, or rights,
from you under this License will not have their licenses
terminated so long as such parties remain in full compliance.

   5. You are not required to accept this License, since you have not
  signed it.  However, nothing else grants you permission to modify
 or distribute the Program or its derivative works.  These actions
are prohibited by law if you do not accept this License.
Therefore, by modifying or distributing the Program (or any work
based on the Program), you indicate your acceptance of this
License to do so, and all its terms and conditions for copying,
distributing or modifying the Program or works based on it.

   6. Each time you redistribute the Program (or any work based on the
   Program), the recipient automatically receives a license from the
  original licensor to copy, distribute or modify the Program
subject to these terms and conditions.  You may not impose any
further restrictions on the recipients' exercise of the rights
granted herein.  You are not responsible for enforcing compliance
by third parties to this License.

   7. If, as a consequence of a court judgment or allegation of patent
   infringement or for any other reason (not limited to patent
issues), conditions are imposed on you (whether by court order,
agreement or otherwise) that contradict the conditions of this
License, they do not excuse you from the conditions of this
License.  If you cannot distribute so as to satisfy simultaneously
your obligations under this License and any other pertinent
obligations, then as a consequence you may not distribute the
Program at all.  For example, if a patent license would not permit
royalty-free redistribution of the Program by all those who
receive copies directly or indirectly through you, then the only
way you could satisfy both it and this License would be to refrain
entirely from distribution of the Program.

   If any portion of this section is held invalid or unenforceable
under any particular circumstance, the balance of the section is
intended to apply and the section as a whole is intended to apply
in other circumstances.

   It is not the purpose of this section to induce you to infringe any
   patents or other property right claims or to contest validity of
 any such claims; this section has the sole purpose of protecting
the integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is
willing to distribute software through any other system and a
licensee cannot impose that choice.

   This section is intended to make thoroughly clear what is believed
  to be a consequence of the rest of this License.

   8. If the distribution and/or use of the Program is restricted in
 certain countries either by patents or by copyrighted interfaces,
the original copyright holder who places the Program under this
License may add an explicit geographical distribution limitation
excluding those countries, so that distribution is permitted only
in or among countries not thus excluded.  In such case, this
License incorporates the limitation as if written in the body of
this License.

   9. The Free Software Foundation may publish revised and/or new
versions of the General Public License from time to time.  Such
new versions will be similar in spirit to the present version, but
may differ in detail to address new problems or concerns.

   Each version is given a distinguishing version number.  If the
Program specifies a version number of this License which applies
to it and "any later version", you have the option of following
the terms and conditions either of that version or of any later
version published by the Free Software Foundation.  If the Program
does not specify a version number of this License, you may choose
any version ever published by the Free Software Foundation.

   10. If you wish to incorporate parts of the Program into other free
   programs whose distribution conditions are different, write to the
   author to ask for permission.  For software which is copyrighted
 by the Free Software Foundation, write to the Free Software
Foundation; we sometimes make exceptions for this.  Our decision
will be guided by the two goals of preserving the free status of
all derivatives of our free software and of promoting the sharing
and reuse of software generally.

   NO WARRANTY

   11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE
QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
SERVICING, REPAIR OR CORRECTION.

   12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
 WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY
MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE
LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,
INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU
OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY
OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN
ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

   END OF TERMS AND CONDITIONS

   How to Apply These Terms to Your New Programs
=============================================

   If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these
terms.

   To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

   ONE LINE TO GIVE THE PROGRAM'S NAME AND AN IDEA OF WHAT IT DOES.
 Copyright (C) 19YY  NAME OF AUTHOR

   This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License      as
published by the Free Software Foundation; either version 2      of the
License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      GNU
General Public License for more details.

   You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
USA.

   Also add information on how to contact you by electronic and paper
mail.

   If the program is interactive, make it output a short notice like
this when it starts in an interactive mode:

   Gnomovision version 69, Copyright (C) 19YY NAME OF AUTHOR
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details      type
`show w'.  This is free software, and you are welcome      to
redistribute it under certain conditions; type `show c'      for
details.

   The hypothetical commands `show w' and `show c' should show the
appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than `show w' and `show
c'; they could even be mouse-clicks or menu items-whatever suits your
program.

   You should also get your employer (if you work as a programmer) or
your school, if any, to sign a "copyright disclaimer" for the program,
if necessary.  Here is a sample; alter the names:

   Yoyodyne, Inc., hereby disclaims all copyright      interest in the
program `Gnomovision'      (which makes passes at compilers) written
 by James Hacker.

   SIGNATURE OF TY COON, 1 April 1989      Ty Coon, President of Vice

   This General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Library General Public License instead of this License.


@EndNode

@Node "Using the source code" "FileX.guide/Using the source code"
@Next "Localization"
@Prev "License"
@Toc "Main"

Using the source code
*********************

   If you wish to make some modifications to FileX you can use the
supplied source code. It can be compiled with SAS/C with help of the
following additional tools:

CatComp
     Needed to produce language catalogs from .cd and .ct files.
     Available from Amiga developer CD.

MakeInfo
     Needed to produce documentation in text and AmigaGuide® formats
     from TexInfo files. Version 1.55 is included in the source code
     archive.

cat2h
     Needed to create FileXStrings.h file from .cd file.

   If you wish to turn on debug output to console you should go to
SAS/C options editor, compiler options section and add DEBUG to the
list of defines. To see the output you should start FileX from CLI with
"SYNC" option.


@EndNode

@Node "Localization" "FileX.guide/Localization"
@Next "Contactaddress"
@Prev "Using the source code"
@Toc "Main"

Localization
************

   Since Version 1.1 it's possible to localize FileX. This feature
requires at least OS 2.1 or higher. This means, that all texts used in
the program can be translated and used in the program. The required
Catalog description and translation files can be found in the
`Catalogs' directory. At the moment there are translations in German,
English, Dutch, Finnish, Norwegian, Swedish and Russian. If someone
translates the texts in a different language, I would be very pleased
to get the corresponding catalog translation file, so I can include it
in the next version.

   There are no translation file for russian and dutch languages.
Russian catalog was created using CatEdit program. Dutch one was sent
to original author by Teijo Kinnunen and the archive did not contain
translation file. You can use CatEdit to edit this catalog or to
produce standard translation (.ct) file.

   Important changes here!  Please see notes for 2.7.  All languages
now have proper (.ct) files.


@EndNode

@Node "Contactaddress" "FileX.guide/Contactaddress"
@Next "History"
@Prev "Localization"
@Toc "Main"

Contactaddress:-)
*****************

   For bugreports!, suggestions, new ideas, problems, or any kind of
stuff, you can write to the following project group:

     http://www.sourceforge.net/projects/filex


@EndNode

@Node "History" "FileX.guide/History"
@Prev "Contactaddress"
@Toc "Main"

History
*******

   What's new in Version...

   V1.1:
   - Localesupport (English/German)

   - The window's width can finally be varied.

   - In additon to the Hex/Ascii display, you may now display Hex or
     Ascii only, too.

   - In Hex-display-mode, you can choose how many Bytes shall be shown
     as a block. You may specify byte, word and longword blocks. It is
     also possible to define no spaces between the blocks.

   V2.0:
   - Several Files can be edited at the same time. So you can divide
     one window in several editareas (like CED) or even use several
     windows at the same time (like TheEdge or GoldEd).

   - Finally there is a status line in which you can see the current
     cursorposition, the name and the length of the file.

   - Key files for registered users. So it's very easy to get your
     registered version by e-mail.

   - In string gadgets you can select gadget shortcuts with the right
     amiga key now.

   - The clipboard is now supported directly. You don't need to use
     "Load from Clip" or "Save from Clip" anymore.

   - A small calculator for simple operations in hexadecimal, decimal,
     octal or binary.

   - The search requester is even more easy now. There are only two
     string gadgets, one for the search and one for the replace string.
     With a switch you can swap between 'search' and 'search and
     replace'.A history function, like the one in the shell, remembers
     all previously entered search strings.

   - A clipboard converter allows you to convert the contents of the
     clipboard in varius ways. So you can change a textstring,
     including a number, into the right number.

   - FileX remembers all the names of the files read from the
     beginning. Per list requester you can choose old files and open
     them again.

   - The ARexx port has been expanded to support the new functions.
     The command shell is now asynchron.

   V2.1 (by Pavel Fedin):

   Unfortunately, Klaas Hermanns abandoned his work long time ago, so
changes list was lost. This version was not released because it still
contained a lot of bugs, displaying code was broken in several places.
In 2003 Luca 'Hexaae' Longone found me and asked to fix and release
this program. I've compared what i got as a result with v2.0 and here
are two main changes:

   - Cursor does not disappear in block marking mode.

   - Registration stuff removed, program released under GNU GPL.

   - Eliminated debugging output when started with "FileX SYNC" command
     from CLI.

   - Corrected some misspellings in program's messages.

   v2.2 (by Pavel Fedin):

   - Changed color of underline cursor (in inactive area) back to white

   - Installer fixed (removed unneeded MagicWB support, the icons
     themselves were already removed in v2.1 package #item
     Documentation fixed (removed description of removed KEY argument).

   v2.4 (15.04.2006 by Open Source Team):

   - complete MorphOS port

   - cosmetical changes for 68040 build

   - code cleanups (but still far away from complete)

   - rx_rx(): free() frees the right thing now

   - localized strings updated

   v2.5 (OS4):

   - (inofficial bump by the unmaintained/supported OS4 port)

   v2.6 (21.09.2008 by Open Source Team):

   - Fixed scrollbar look (MorphOS)

   - AROS port

   - ...

   - fixed locale build (geit)

   - fixed several dates (geit)

   v2.7 (12.06.2014 by Michael Malyshev):

   - Custom screens now work again

   - Changing screens or screenmode now works (was blocked by requester)

   - Palette editor is working again for custom screens

   - Preference settings are accessible again

   - Viewmode menu settings are now loaded with program start.  Loading
     of preference via menu is still incomplete, some settings are
     changed, some are ignored, maybe a fix for future updates.  I wish
     to release this build or it will take forever and ever ;-)

   - Welcome back ARexx Command Shell

   - GUI - removed reference to many people in title bar, got too
     crowded and could cause a crash.  The about window is enough for
     the glory.

   - GUI - scroll bar now 100% style guide compliant

   - GUI - modified the bevel fill, so it looks correct on hi-res 1:1
     screens with single pixel lines and VisualPrefs, as a side effect
     2:1 screens may look a bit different now. (Calculator, Prefs)

   - Russian localization updated

   - Small updates to other languages

   - You are still reading this? Try it out!

   - Locale files are compatible to 2.4+ versions, but may need small
     updates to look properly. The changes in 2.4 done by others have
     broken compatibility to 2.0 locale files, but they can be fixed
     easily since the major difference is shifting of all id's by -1

   - Updated and recovered some translations (Natives please check!)

   - Allows to grab only legal memory (no more enforcers)

   - Other small updates and fixes

   - Time to do some Happy Hexing

@EndNode

