@DATABASE 0O0O
@(C) "Copyright © 1995, 1996 Cloanto Italia srl"
@FONT topaz.font 8
@WIDTH 74

@NODE Main "Cloanto - Personal Paint 7 - ColorType"
@TOC PPaintCD:H/7/1/4/OO00/Main

@{B}Cloanto ColorType@{UB}

Sowohl von Hobbytypographen als auch von Profis wird ColorType häufig als
der beste Bitmap-Schrifteneditor für den Amiga bezeichnet - in jedem Fall
ist es das führende Program zum Erstellen und Bearbeiten von Schriften in
bis zu 256 Farben (ohne Größenbeschränkung, RTG-kompatibel). Durch seine
Rexx-Schnittstelle läßt sich ColorType optimal in Umgebungen mit anderen
Programmen integrieren, außerdem läßt sich externe Funktionalität direkt
in die ColorType-Werkzeugleiste integrieren. Darüber hinaus bietet das
Programm Sonderfunktionen zur Kantenglättung (selbst Amiga-Vektorschriften
lassen sich als Ausgangspunkt verwenden), von rechts nach links laufende
Schriften, Texturierung (Oberflächengestaltung) und (in Verbindung mit
Personal Paint) sogar Bildverarbeitung. Diese Funktionen machen es zu
einem idealen Zusatzwerkzeug für Videoanwendungen und für die Erstellung
von Titeln.


@{B}1.         Erste Schritte@{UB}

ColorType läßt sich auf jedem Amiga mit mindestens 1 Mbyte freies RAM
(ideal sind 1 oder 2 Mbyte Chip RAM) durch einen Doppelklick auf sein
Programmpiktogramm starten. Die Verwendung von ColorFonts wird ab Version
2 der Amiga-Systemsoftware unterstützt.

Das Herumexperimentieren mit den vielen Funktionen von ColorType, die sich
hinter den Menüs und Symbolen verbergen, ist ein einfacher Weg, das
Programm kennenzulernen. Es wird jedoch empfohlen, zunächst eine
Datensicherung von Programmen und Daten durchzuführen, bevor Sie
Funktionen ausprobieren, die einen Schreibvorgang auslösen.

Da ColorType im Grunde genommen eine Art "Personal Paint für Schriften"
ist und Teile des Programms auch aus dessen Entwicklung hervorgingen,
werden viele Benutzer sich mit der Werkzeugleiste und den Hauptfunktionen
schnell zurechtfinden. Weitere Informationen entnehmen Sie bitte der
Dokumentation zu @{" Personal Paint " LINK PPaintCD:H/7/1/4/OO00/Main}. Das Programmpaket
Personal Fonts Maker, das zusätzliche Funktionalität bei der Bearbeitung
schwarz/weißer Schriften bietet (z.B. das Laden von Schriften in den
Druckerspeicher), enthält zusätzliche Informationen zum Thema Fonts.

Amiga-Schriften lassen sich mit Hilfe der Menübefehle "Amiga Schrift
laden" und "Amiga Schrift speichern" im "Projekt"-Menü laden und
speichern. Die Auswahl des Schriftformats (Größe, Anzahl der Farben)
erfolgt über über das Dialogfenster "Schriftformat", welches über das Menü
"Voreinstellungen" geöffnet werden kann. Durch einen Druck auf die
<p>-Taste wird der Paletteneditor aufgerufen, ebenso durch Auswahl der
Option "Ändern" im Untermenü "Farbe/Palette".

Wenn während der Arbeit mit ColorType nur noch weniger als 100 Kbyte
zusammenhängenden Chip RAMs übrig sind, beginnt ColorType, gerade nicht
benötigte Schriftdaten automatisch aus dem Hauptspeicher zu entfernen.
Dies wird notwendig, da die Amiga-Systemsoftware beim Laden einer neuen
Schrift die Daten der alten, nicht mehr benutzten, nicht löscht, sondern
mit der Zeit immer mehr Bytes im Speicher anhäuft.

Sobald der Befehl "Schrift anzeigen" im "Projekt"-Menü gewählt wird,
öffnet sich ein weiterer Bildschirm, der alle Zeichen der aktuellen
Schrift (mit Ausnahme der deaktivierten) zeigt. Dieser läßt sich bei
Bedarf durch Bewegen des Mauszeigers an den oberen oder unteren
Bildschirmrand verschieben und durch einen Druck auf eine beliebige Taste
oder Maustaste wieder schließen.

Die meisten Symbole in der Werkzeugleiste sind doppelt belegt, d.h. sie
reagieren bei Aktivierung mit der Maus unterschiedlich auf die beiden
Maustasten. In den meisten Fällen wird mit der rechten Maustaste ein
Dialogfenster mit Einstellungen zu der betreffenden Funktion geöffnet. Zur
Aktivierung verschiedener Effekte (wie z.B. von Rechteckumrissen oder
gefüllten Boxen) dienen die Zeichenwerkzeuge im oberen und unteren
Bereich.

ColorType verfügt darüber hinaus noch über fünf besondere Symbole, die im
allgemeinen nicht Bestandteil eines normalen Malprogramms sind. Hinter den
fünf Piktogrammen in der linken oberen Bildschirmecke verbergen sich
folgende Funktionen:

- Schrift
- Zeichen
- Spalten
- Abstand
- Kerning

Durch einen Druck auf die linke Maustaste auf eines dieser Symbole wird
die dazugehörige Einstellung jeweils um den Wert 1 erhöht, durch einen
Druck auf die rechte Taste entsprechend verringert.

Das Schrift-Symbol dient zur Auswahl der Schriftenumgebung. ColorType
bietet zwei voneinander unabhängige "Arbeitsräume", die unterschiedliche
Schriften enthalten können. Alternativ dazu könnte auch eine Umgebung eine
Schrift enthalten, und die andere ein größeres, als Speicherplatz für
Clips verwendetes Bild.

Das Zeichensymbol gibt Ihnen die Möglichkeit, zwischen den einzelnen
Zeichen einer Schrift hin- und her zu wechseln. Daneben lassen sich die
Zeichen auch durch Anklicken des "??"-Symbols und nachfolgende Auswahl in
der Überblickdarstellung auswählen. Amiga-Schriften können bis zu 257
Zeichen enthalten (von Nummer 0 bis 256). Beachten Sie jedoch, daß das
Zeichen 256 für das @{I}undefinierte @{UI}Zeichen reserviert ist, welches von im
Amiga-Format gespeicherten Schriften benutzt wird.

Die horizontale Größe eines Zeichens wird durch den "Spalten"-Wert
bestimmt. Diese Größe, die abhängig ist von der Größe des Rasters, läßt
sich wahlweise verringern oder erhöhen. Der gültige Minimalwert ist 1
(d.h. eine Spalte Punkte), während der maximale Wert von den unter
"Voreinstellungen/Schriftformat" festgelegten Einstellungen abhängt.
Dieser Parameter erfordert keine Festlegung zusätzlicher Leerzeichen auf
der linken oder rechten Seite des Zeichens; hierzu sollten die Parameter
"Abstand" und "Kerning" verwendet werden. Nicht benutzte Zeichen lassen
sich mit dem ON/OFF-Symbol deaktivieren.

Mit Hilfe des Parameters "Space" läßt sich die @{I}logische @{UI}horizontale Größe
des Zeichens festlegen, beginnend mit dem Anfang der Bitmap. Der mit
diesem Parameter assoziierte Wert liegt üblicherweise etwas über dem für
den Parameter "Spalte" definierten; außerdem beeinflußt er die Plazierung
des nachfolgenden Zeichens.

Der Parameter "Kerning" (auch: Linker Offset) bestimmt die Startposition
des Zeichens bei der Ausgabe auf Drucker oder Bildschirm. Er legt einen
Abstand von der Position fest, die direkt auf das zuletzt gedruckte oder
angezeigte Zeichen folgt. Obwohl er normalerweise bei 0 belassen wird,
lassen sich z.B. auch negative Werte eingeben, wie es beispielsweise zur
Simulation bestimmter Handschrifteffekte notwendig ist.

Die Parameter "Abstand" und "Kerning" nehmen keine direkten Änderungen an
der Bitmap der Zeichen vor. Sie dienen vielmehr zur Festlegung des
Abstands zwischen den Zeichen, wenn diese zur Druck- oder
Bildschirmausgabe hintereinander gruppiert angeordnet werden.

Das Rexx-Symbol zwischen den Airbrush- und den Pinselwerkzeugen läßt sich
wahlweise mit der rechten (zur Auswahl eines neuen Skripts) oder mit der
linken Maustaste (zur Wiederholung einer vorherigen Aktion) auswählen. Um
eine Erläuterung zu einem Makro zu erhalten, ist im Auswahlfenster der
Makrofunktion zunächst die gewünschte Datei und danach "Über Makro"
anzuklicken. Eine ausführlichere Beschreibung der Makrofunktionen und der
Rexx-Schnittstelle von ColorType finden Sie im Abschnitt zu den
weiterführenden Funktionen weiter unten.

Die zwei Symbole unterhalb des Pinselwerkzeugs dienen zur Aktivierung der
Funktionen "Speicher" und "Abschneiden". Durch Auswahl des ersteren
Symbols mit der linken Maustaste läßt sich das aktuelle Zeichen
(einschließlich seiner Abstandsinformationen) in einen internen Puffer
kopieren, mit der rechten Maustaste kann es wieder eingefügt werden. Die
"Abschneiden"-Funktion verringert die Größe des Zeichenrasters, indem alle
leeren Spalten automatisch entfernt werden. Die Aktivierung dieser
Funktion mit der rechten Maustaste bewirkt eine Zentrierung des aktuellen
Zeichens, wobei auch leere Spalten erhalten bleiben. Die anderen Symbole
dienen zum Verschieben und Spiegeln des Zeichens.

Die kleinen Pfeilsymbole zwischen der Werkzeugleiste und der Arbeitsfläche
verweisen auf bis zu vier Referenzpunkte, die besonders bei der
Entwicklung neuer Schriften benötigt werden. Um einen solchen Punkt zu
setzen, ist im Referenzpunktbereich mit der linken Maustaste die
gewünschte Position festzulegen und einer der Funktionstasten <F1> bis
<F4> zuzuweisen.

Der Status der Box auf der linken Seite des "Rasterfarbe"-Werkzeugs zeigt
an, ob die aktuelle Schrift eine änderbare Vordergrundfarbe hat. Einige
Programme sind in der Lage, diese zu ändern, um das Erscheinungsbild einer
Schrift einer bestimmten Umgebung anzupassen. Um diese Farbe festzulegen,
klicken Sie zunächst auf die Box, um die Palette zu öffnen. Hier können
Sie nun die gewünschte Farbe auswählen. Um diese Funktion zu deaktivieren,
ist zunächst die Box anzuklicken, und danach ein Bereich irgendwo
außerhalb der Palette.

Amiga-Schriften sind normalerweise in einem Verzeichnis gespeichert, dem
das logische Gerät "FONTS:" zugewiesen ist. Im Lieferumfang von ColorType
befindet sich das Programm "AssignFonts", mit dessen Hilfe sich "FONTS:"
auch einem anderen Verzeichnis zuweisen läßt: Ein Beispiel wäre, den
Schriftenpfad von "SYS:Fonts" auf "ColorType:Fonts" umzulenken, oder
umgekehrt. Das Schriftenauswahlfenster von ColorType hat diese
Funktionalität bereits eingebaut, allerdings benötigen bestimmte andere
Programme zusätzliche Tools (wie z.B. "AssignFonts").


@{B}1.1        Übung 1: Erstellung eines ColorFonts in wenigen Minuten@{UB}

Im Verzeichnis "Fonts" befindet eine Beispielschrift mit der Bezeichnung
"TenMinutes", die sich innerhalb weniger Minuten wie folgt erstellen
läßt:

Wählen Sie im Menü "Projekt" den Befehl "Amiga Schrift laden" aus, und
laden Sie die Schrift mit der Bezeichnung "CGTimes". Dabei handelt es sich
um eine Vektorschrift, die sich problemlos auf unterschiedliche Größen
skalieren läßt. Tragen Sie nun in das Größenfeld neben dem Schriftnamen
den Wert "55s" ein. Das "s" bedeutet, daß die Schrift von der
Amiga-Systemsoftware auf eine Größe von 55 Punkt skaliert werden soll;
andernfalls würde einfach diejenige schon bestehende Schriftgröße
genommen, die dem geforderten Wert m nächsten liegt. Klicken Sie auf das
Fett-Symbol, um eine fette Schrift zu erzeugen. Hinweis: Wenn bei Ihnen
die Schrift "CGTimes" nicht vorhanden ist, wählen Sie bitte irgendeine
andere schwarz/weiße Schrift vergleichbarer Größe aus. Beachten Sie dabei,
daß im vorliegenden Beispiel eine fette Schrift benötigt wird, da diese
später farbig ausgefüllt werden soll.

Wählen Sie im Menü "Voreinstellungen" die Option "Schriftformat" aus, und
stellen Sie 8 Farben ein. Wählen Sie dann "Farbe/Palette/Laden" aus, und
öffnen Sie die vorbereitete Palette mit der Bezeichnung "TenMinutes.col".

Probieren Sie einmal Funktion "Voreinstellungen/Raster/Punkte" aus, um
festzustellen, welche Rasterdarstellung Ihrer Arbeitsweise am besten
entgegenkommt. Diese Einstellung wirkt sich auf die Anzeige der Zeichen
auf der Arbeitsfläche aus.

Klicken Sie in der Werkzeugleiste das Füllwerkzeug mit der rechten
Maustaste an, um das Dialogfenster "Flächenparameter" zu öffnen.
Vergewissern Sie sich, daß als Füllmuster "Verlauf" eingestellt ist.
Klicken Sie nun auf das Symbol mit dem Kreis, bis dieses einen Kreis mit
vier nach außen weisenden Pfeilen darin zeigt. Klicken Sie dann auf das
anderen Symbol (links daneben), bis dieses einen Pfeil mit vier Boxen
zeigt (manueller Verlaufsmodus). Klicken Sie nun, ohne das Dialogfenster
zu verlassen, mit der linken Maustaste auf die zweite Farbe im
Palettenbereich der Werkzeugleiste (das blaßgelbe Kästchen neben dem
schwarzen), bevor Sie abschließend die letzte Farbe (Braun) mit der
rechten Maustaste wählen. Schließen Sie die Einstellungen mit "Weiter"
ab.

Nun läßt sich das Füllwerkzeug auf alle Zeichen der aktuellen Schrift
anwenden. Klicken Sie dazu einfach mit der linken Maustaste an eine
beliebige Stelle jedes Zeichens. Wenn Sie vorher die Menüoption
"Voreinstellungen/Testfenster" aktiviert haben, können Sie beobachten, wie
sich die Änderungen auf den Beispieltext auswirken.

Wir gratulieren: Sie haben gerade ein ColorFont erstellt!


@{B}1.2        Übung 2: Erstellen einer Schrift mit geglätteten Kanten@{UB}

Mit diesem Beispiel wird die Kantenglättung einer schwarz/weißen Schrift
verdeutlicht, wobei graue Zwischentöne dazu verwendet werden, den Eindruck
einer höheren Auflösung (und damit besserer Qualität) zu erzielen. Dieser
Effekt wird auf dem Videosektor sehr häufig genutzt und eignet sich bei
der Arbeit mit Malprogrammen sehr gut dazu, die Qualität insbesondere
kleinerer Schriften zu verbessern.

Zur Durchführung dieses Beispiels wird die Funktion "Farben ändern"
benötigt, die über das Untermenü "Voreinstellungen/Anpassen" aktiviert
werden kann.

Zum Erstellen einer kantengeglätteten Schrift muß zunächst eine
Amiga-Schrift geladen werden (vorzugsweise eine Vektorschrift), danach
sind der Palette die benötigten Grautöne hinzuzufügen, bevor abschließend
die Schriftgröße reduziert wird (Menübefehl
"Voreinstellungen/Schriftformat"). Dabei gilt: Je mehr Grautöne
hinzugefügt werden, und je kleiner die Schrift im Verhältnis zum Original
gewählt wird, desto besser das Ergebnis.

Im vorliegenden Beispiel laden wir eine Schrift, die zweimal so hoch ist
wie das später gewünschte, kantengeglättete Ergebnis. Laden Sie, wie
weiter oben in Übung 1 beschrieben, nun einmal die Schrift CGTimes 50 oder
eine andere Schrift ähnlicher Größe. Das Laden einer fetten Schrift (wie
oben) ist nicht erforderlich.

Stellen Sie im Dialogfenster "Schriftformat" die Anzahl der Farben auf 4
ein.

Öffnen Sie nun das Dialogfenster "Farbpalette ändern" durch einen Druck
auf die <p>-Taste oder Auswahl des Menübefehls "Farbe/Palette/Ändern", und
ordnen Sie die vier Farben so an, daß Weiß links und Schwarz rechts
plaziert wird. Dazwischen sollten zwei (ein heller links und ein dunkler
rechts) Grautöne liegen. Wenn Sie die voreingestellten Programmoptionen
nicht verändert haben, läßt sich diese Palette ganz einfach erstellen,
indem die erste Farbe mit der dritten und die zweite mit der vierten
vertauscht wird. Um graue Zwischentöne zu kreieren, klicken Sie zunächst
auf die erste Farbe (Weiß), gefolgt von einem Klick auf eines der beiden
mit I oder II bezeichneten Verlaufssymbole und einem abschließenden
Mausklick auf die letzte Farbe (Schwarz).

Sie sollten nun hellgraue Zeichen vor einem weißen Hintergrund sehen. Da
wir aber schwarze Zeichen erstellen möchten, müssen wir wie folgt
vorgehen:

Wählen Sie in der Palette unter der Werkzeugleiste mit der linken
Maustaste das schwarze Feld aus, um dessen Farbe zur Vordergrundfarbe zu
machen. Durch nachfolgendes Anklicken des hellgrauen Felds mit der rechten
Maustaste wird die Hintergrundfarbe bestimmt. Wählen Sie dann im Menü
"Farbe" die Option "Hintergrund zu Vordergrund". Daraufhin sollte die
Zeichen der Schrift schwarz auf weiß erscheinen.

Öffnen Sie nun erneut das Dialogfenster "Schriftformat", und teilen Sie
die Werte im Texteingabefeld für die Schriftgröße durch 2. Beispiel: Wenn
die Werte 44 und 50 sind, müssen diese durch 22 und 25 ersetzt werden.
Schließen Sie die Einstellung durch Anklicken von "Weiter" ab.

Vor der Umwandlung der Schrift öffnet sich zunächst ein Dialogfenster mit
einer Angabe der neuen Größe. Lassen Sie das Kontrollfeld der Funktion
"Anpassen" aktiviert, und klicken Sie auf "Weiter".

Fertig! Sie haben gerade eine Schrift mit geglätteten Kanten erstellt!


@{B}2.         Weiterführende Funktionen von ColorType@{UB}

@{B}2.1        Das Dialogfenster "Makroauswahl"@{UB}

Durch Anklicken des Makrowerkzeugs mit der rechten Maustaste (oder mit der
linken, wenn vorher noch kein Makro ausgewählt wurde) öffnet sich das
Dialogfenster "Makroauswahl".

Die Liste in der Mitte des Fensters enthält alle verfügbaren Makros. Dabei
handelt es sich prinzipiell um Rexx-Programme, welche sich normalerweise
im Verzeichnis "Rexx" von ColorType befinden. Es ist jedoch auch möglich,
in den Programmvoreinstellungen ein beliebiges anderes Verzeichnis
anzugeben. Tastaturkurzbefehle zur Aktivierung der Makros werden rechts
von den Makronamen angezeigt.

Im oberen Bereich des Dialogfensters befinden sich vier Tastenfelder mit
den Aufschriften "Neu", "Ändern", "Löschen" und "Über Makro". Die
Funktionen "Neu" und "Ändern" führen zum Öffnen des Dialogfensters "Makro
ändern", in dem entweder eine neue Makrodefinition vorgenommen oder eine
schon bestehende geändert werden kann. Mit "Löschen" läßt sich ein
Makroeintrag aus der Liste entfernen. "Über Makro" zeigt
Verwendungsanweisungen und andere Informationen über das ausgewählte Makro
an, wenn das dazugehörige Rexx-Programm diese enthält (sie müssen mit
"/**" und "*/" vom übrigen Programmtext getrennt sein). Weitere
Informationen zum Format der mit der Funktion "Über Makro" darstellbaren
Informationen finden Sie in der Beschreibung der Option WORDWRAP für den
Rexx-Befehl "RequestNotify" von ColorType.

Die Tastenfelder mit den Bezeichnungen "Ausführen", "Schließen" und
"Abbruch" im unteren Bereich des Dialogfensters dienen entweder dazu, das
ausgewählte Makro auszuführen, das Fenster unter Beibehaltung aller
Änderungen zu schließen oder es unter Verlust aller Änderungen zu
schließen.


@{B}2.2        Das Dialogfenster "Makro ändern"@{UB}

ColorType-Makros werden durch zwei Gruppen von Informationen definiert: a)
durch ein Rexx-Programm,  und b) durch die im Dialogfenster "Makro ändern"
angegebenen Daten. Letztere sind zwar optional, allerdings empfiehlt es
sich grundsätzlich, eine Rexx-Datei mit einem externen Namen und einem
Tastaturkurzbefehl zu versehen. Außerdem wird hier der Zugriff auf
Programme ermöglicht, die nicht im Verzeichnis "ColorType/Rexx"
gespeichert sind.

Im Namensfeld kann der Benutzer einen Makronamen eintragen, der nicht mit
dem Dateinamen übereinstimmt. Wird kein Name vergeben, so erscheint der
normale Dateiname (ohne Suffix) in der Makro-Auswahlliste. Es besteht die
Möglichkeit, durch Verwendung unterschiedlicher Argumente mehrere Makros
in die Liste aufzunehmen, die auf das gleiche Rexx-Programm verweisen.

Das Feld "Kürzel" erlaubt es, einem Makro einen Tastaturkurzbefehl
zuzuweisen. Hierbei wird das gleiche Format benutzt wie bei Menü- und
anderen Kurzbefehlen (wie auch in den "UIText.xxx"-Dateien).

Das Feld "Datei:" enthält neben dem vollständigen Pfad auch den Dateinamen
des Makros. Standardmäßig sind alle ColorType-Makros im Verzeichnis
"ColorType/Rexx" gespeichert. Dank dieses Felds lassen sich Makros
aufrufen, die auf Rexx-Programme in anderen Verzeichnissen verweisen, wie
z.B. "PPaint/Rexx". Durch Anklicken von "Einstellen" öffnet sich ein
Dateiauswahlfenster, in dem sich das gewünschte Verzeichnis auswählen
läßt.

In das Texteingabefeld für die Argumente kann der Benutzer eine optionale
Zeichenkette einfügen, die bei der Ausführung des Rexx-Programms an dieses
übergeben wird. Dabei kann die Zeichenkettte folgende, durch ein
"%"-Zeichen angekündigte Sonderzeichen enthalten:

%p = Name des Rexx-Ports

%n = Makroname (Wie im Feld "Name" festgelegt)

%b = Gedrückte Maustaste (üblicherweise in Kombination mit %x und %y):
     1 = links, 3 = rechts. Die mittlere Maustaste wird nicht benutzt,
     da sie im "Bildverschiebemodus" des Programms benutzt wird.

%x = X-Koordinate

%y = Y-Koordinate

%w = Breite (relativ zu %x)

%h = Höhe (relativ zu %y)

Sobald ein Makro ausgeführt wird, erkennt ColorType automatisch das
Vorhandensein der Sondercodes %p, %x, %y, %w und %h, und wartet darauf,
daß der Benutzer einen Punkt oder rechteckigen Ausschnitt markiert
(vorausgesetzt, %w oder %h werden in der Argumentzeichenkette gefunden).
Wenn das Makro im Rechteckmodus ausgeführt wird (d.h., wenn %w oder %h im
Bestandteil des Arguments sind), wird das Makro ausgeführt, sobald die zur
Festlegung des Rechtecks benutzte Maustaste wieder losgelassen wird;
andernfalls wird das Makro sofort ausgeführt (auch ohne daß die Taste
losgelassen wird). Es wird dadurch ermöglicht, Makroaktionen abhängig von
der Position und dem Timing bestimmter Benutzeraktionen durchzuführen. In
einem solchen Fall darf der Befehl "LockGUI" nicht im entsprechenden
Rexx-Programm ausgeführt werden, bevor die benötigte Eingabe verarbeitet
worden ist.

In dem Moment, in dem der Argumentstring an das Rexx-Programm übergeben
wird, sind alle "%"-Codes bereits von ColorType durch die dazugehörigen
Informationen ersetzt worden. So, wie üblicherweise Argumente über die
Amiga-Shell an Rexx-Programme übergeben werden, übergibt auch ColorType
alle Argumente als eine einzige Zeichenkette (ARG(1)). Es obliegt dann dem
Rexx-Programm, diese zu parsen (PARSE ARG <schablone>). Die im
Lieferumfang von ColorType enthaltenen Makros enhalten u.a. auch einige
Beispiele für das Argumentparsing.

In den Dateien für die Programmvoreinstellungen wird das Schlüsselwort
MAKRO dazu verwendet, die verschiedenen Parameter im Dialogfenster "Makro
ändern" zu setzen. Dazu wird das folgende Format benutzt:


   MACRO = @{I}"Name", "Kürzel", "Datei", "Argumente"@{UI}

Zum Beispiel:

   MACRO = "Schriftkanten glätten", "Ctrl-a",
           "ColorType:Rexx/AntiAliasFont.ctrx", "%p"

   MACRO = "Help - Rexx", "Ctrl-h",
           "ColorType:Rexx/Help.ctrx", "%p Command GUI \\"%n\\""

   MACRO = "Test", "", "ColorType:Rexx/Test.ctrx", "%x %y %p"


@{B}2.3        Die Rexx-Schnittstelle@{UB}

ColorType verfügt über eine leistungsfähige ARexx- (=Amiga Rexx-)
Schnittstelle, die eine Steuerung des Programms sowohl über Makros als
auch über andere Programme ermöglicht. Alle Funktionen zur
Schriftenbearbeitung verfügen auch über einen dazugehörigen Rexx-Befehl;
darüber hinaus enthält ColorType eine Reihe von Befehlen, die eine
Interaktion mit dem Benutzer zulassen.

Der Name des ersten Rexx-Ports ist "COLORTYPE". Zusätzliche Ports erhalten
die Bezeichnungen "COLORTYPE_2", "COLORTYPE_3", usw.


@{B}2.3.1      Ein- und Ausgabeumgebung@{UB}

ColorType bietet viele Befehle zur Auswertung von Eingaben und zur Anzeige
von Ausgaben über den standardmäßigen ColorType-Bildschirm und die
Benutzerschnittstelle des Programms. Darüber hinaus lassen sich aber
natürlich auch die Standard-Ein- und Ausgabebefehle von Rexx (PULL und
SAY) verwenden, die üblicherweise im Text-Terminalmodus zur Anwendung
kommen (wie z.B. bei der Amiga-Shell).

Wenn ColorType über die Shell gestartet wird, erscheint auch die
standardmäßige Ein- und Ausgabe von Rexx in der gleichen Shellumgebung.
Dabei ist jedoch zu beachten, daß ein Start von ColorType mit "Run" oder
einem ähnlichen Programm, der das Abkoppeln des Programms verhindert, die
Dateneingabe über die Shell unmöglich macht.

Wird ColorType über die Workbench gestartet, so wird der Rexx-Umgebung
eine Standardkonsole zugewiesen. Wenn das Rexx-Programm ein Piktogramm
besitzt, dem ein "CONSOLE="-Merkmal zugewiesen ist, so wird dieses
automatisch benutzt. Wenn der Schalter AUTO aktiv ist, wird das
Konsolenfenster nur dann geöffnet, wenn dies auch wirklich notwendig ist.

Während des Debuggings kann es sich evtl. als sinnvoll erweisen, die
Ausführung von ColorType über die Workbench mit den Shell-Befehlen "TCO"
und "TCC" zu kombinieren, um die Globale Ablaufverfolgung zu aktivieren
bzw. zu deaktivieren.


@{B}2.3.2      Syntax-Konventionen@{UB}

Bei allen Rexx-Befehlen wird nicht zwischen Groß- und Kleinschreibung
unterschieden.

Schlüsselwörtern kann optional ein "=" Zeichen angehängt werden, wenn die
Zuweisung nicht in Anführungszeichen erfolgt.

   FILE="Ram Disk:Test"

ist das gleiche wie

   FILE "Ram Disk:Test"

aber

   "FILE=Ram Disk:Test"

wird als einzelnes Argument übergeben. Schlüsselwörter in
Anführungszeichen werden nicht erkannt, wenn zwischen diesen noch weiterer
Text steht.

Die Verwendung von Schlüsselwörtern ist grundsätzlich optional, sofern die
Reihenfolge der Argumente nicht geändert wird oder das Bezugsargument
nicht "vorhersehbar" ist, wie in der folgenden Befehlszeile:

   LoadImage FILE "Vorschau" PREVIEW

Schlüsselwörter eignen sich besonders zur Festlegung weniger Argumente,
wenn die anderen in der Standardeinstellung verbleiben sollen:

   RequestResponse PROMPT "Dies ist ein Hinweis"

wohingegen der gleiche Befehl in Verbindung mit den durch Ihre Position
identifizierten Argumente wie folgt aussehen würde:

   RequestResponse "Title" "Dies ist ein Hinweis" "Weiter" "Abbruch"


@{B}2.3.3      Parameter und Optionen@{UB}

In der vorliegenden Dokumentation wird der Begriff "Parameter"
grundsätzlich dann verwendet, wenn ein Wert (entweder als Zeichenkette
oder numerisch) an einen Rexx-Befehl übergeben wird, während es sich bei
einer "Option" ausnahmslos um ein einzelnes Schlüsselwort (wie z.B. QUIET)
handelt, welches ein bestimmtes Merkmal aktiviert.

Ausschließlich zu Dokumentationszwecken wird in den folgenden
Beschreibungen den Parametern und Optionen ein Schrägstrich ("/")
nachgestellt, gefolgt von einem Großbuchstaben, der auf den Parametertyp
verweist. Parameter und Optionen sind darüber hinaus durch Komma getrennt.
Dieses Format wird häufig auch als "Befehlsschablone bezeichnet". Es ist
jedoch zu beachten, daß die Schrägstrich-/Buchstaben-Kombinationen und die
Kommata kein Bestandteil der Rexx-Befehle sind.

Die hier beschriebenen Schablonenformate sind identisch mit den von
AmigaDOS-Befehlen her bekannten Standardschablonen.

   <parameter>/A   Der Parameter ist grundsätzlich erforderlich, damit der
                   Rexx-Befehl funktioniert.

   <option>/S      Diese Option wirkt wie ein Schalter. Wenn das
                   Schlüsselwort angegeben wird, ist die Option
                   eingeschaltet-, ansonsten ausgeschaltet.

   <value>/N       Zeigt an, daß ein numerischer Parameter (im Gegensatz
                   zu Text) erwartet wird. Hexadezimale (zur Basis 16)
                   Zahlen sollte ein "$" oder "0x" vorangestellt werden.

   <parameter>/M   Es werden mehrere Parameter akzeptiert.

   <string>/F      Die Zeichenkette muß den letzten Parameter in der
                   Befehlszeile bilden, wobei der gesamte abschließende
                   Teil der Befehlszeile als die gewünschte Zeichenkette
                   betrachtet wird. Selbst, wenn die Zeichenkette
                   Leerzeichen enthält, sind Anführungszeichen nicht
                   erforderlich.


@{B}2.3.4      Rückgabewerte@{UB}

Funktionen, die ein Ergebnis zurückgeben, (@{I}auch: "liefern" @{UI}) tun dies
grundsätzlich über die Rexx-Variable "RESULT". Dabei ist zu beachten, daß
Ergebnisse in Zeichenkettenform (z.B. Beispiel-Dateipfade) immer in
Anführungszeichen eingeschlossen erscheinen (z.B. "ColorType:Fonts").

Statuswerte für erfolgreiche Ausführung, Warnung oder fehlgeschlagene
Ausführung des jeweils letzten Befehls werden in der Rexx-Variablen RC
gespeichert.

In Rexx-Programmen lassen sich die Befehle RETURN und EXIT dazu verwenden,
nach Beenden eine Zeichenkette zurückzugeben. ColorType zeigt diese
Ergebniswerte automatisch an. So beendet beispielsweise der Befehl

   RETURN 'Bye'

das laufende Rexx-Programm, bevor ein Fenster mit der folgenden Meldung
geöffnet wird:

   "Macro returned: Bye"


@{B}2.3.5      Warn- und Fehlercodes@{UB}

Die folgenden numerischen Codes werden in der Rexx-Variablen RC
zurückgegeben.

   @{I}Code      Bedeutung @{UI}

    0        Normales Ergebnis oder positive Auswahl (Ok/Weiter)
    5        Abbruch durch Benutzer
   30        Unbekannter Befehl
   31        Ein oder mehrere erforderliche Argumente fehlen
   32        Zu viele Argumente
   33        Inkompatible Optionen
   34        Interner Fehler
   35        Dateiein-/ausgabefehler
   36        Datei konnte nicht geöffnet werden
   37        Speichermangel
   38        Unbekanntes Dateiformat oder Fehler beim Entschlüsseln
   39        Datei enthält nicht die erforderlichen Daten
   40        Fehlerhafter Dateiinhalt
   41        Bildtyp kann nicht geladen werden
   42        Entschlüsselung nicht möglich
   43        Datei nur teilweise geladen/verarbeitet
   44        Printer.device kann nicht geöffnet werden
   45        Fehler bei Ausgabe auf Drucker
   46        Unbekanntes Format
   47        Unbekannte Formatoption
   48        Unbekannte Einstellung
   49        Numerisches Argument erforderlich
   50        Wert außerhalb des gültigen Bereichs/Illegaler Wert
   51        Reserviert für Personal Paint
   52        Reserviert für Personal Paint
   53        Benutzerdefinierter Pinsel erforderlich
   54        Zeichen konnte nicht gefunden werden
   55        Schrift konnte nicht gefunden werden
   56        Vorgang bei deaktivierten Zeichen nicht möglich


@{B}3.         Rexx-Befehlsreferenz@{UB}

In den folgenden Abschnitten wird die Verwendung aller von ColorType
unterstützten Rexx-Befehle beschrieben. Eine einfachere Liste mit allen
Befehlen wird von ColorType in der Variablen RESULT zurückgegeben, wenn
der Rexx-Befehl "Help" ausgeführt wird.

Die folgenden drei Optionen (Schablone: <option>/S) sind allen
Rexx-Befehlen gemeinsam:

   FORCE       Diese Option bewirkt, daß alle üblicherweise vom Benutzer
               zu bedienenden Dialogfenster übersprungen werden. Dabei
               wird ein Standard-Ergebniswert an das Programm
               zurückgegeben.

   QUIET       Diese Option deaktiviert alle Fehler- und Warnmeldungen.

   NOPROGRESS  Diese Option deaktiviert alle Dialogfenster, die den
               Fortschritt eines Vorgangs anzeigen.


@{B}3.1        Center@{UB}

Dieser Befehl dient zum Zentrieren des aktuellen Zeichens, sofern sich auf
dessen rechter und/oder linker Seite noch leere Spalten befinden. Die
horizontale Größe des Zeichens bleibt dabei unverändert.


@{B}3.2        Chop@{UB}

Dieser Befehl entfernt leere Pixelspalten rechts und links vom aktuellen
Zeichen, falls vorhanden.


@{B}3.3        Clear@{UB}

Dieser Befehl löscht das aktuelle Zeichen unter Verwendung der aktuellen
Hintergrundfarbe.


@{B}3.4        Copy@{UB}

Dieser Befehl kopiert das aktuelle Zeichen (und dessen
Abstandsinformationen) in einen internen Puffer. Entspricht der Auswahl
des Speicherwerkzeugs mit der linken Maustaste.


@{B}3.5        DeleteFont PATH NAME SIZE/N STYLE@{UB}

Dieser Befehl löscht die angegebene Schrift aus dem Speichersystem von
ColorType. Evtl. im RAM vorhandene Schriftdaten werden ebenfalls
gelöscht.

Wenn die Argumente NAME und SIZE nicht angegeben werden, wird ein
Schriftenauswahlfenster geöffnet. Wird PATH nicht angegeben, so wird der
Standard-Schriftenpfad des Systems ("FONTS:") verwendet.

Bei dem Argument NAME wird die Schreibweise unterschieden, d.h. "Topaz"
ist nicht das gleiche wie "topaz". Das Suffix ".font" ist optional, d.h.
"topaz.font" ist das gleiche wie "topaz".


@{B}3.6        DynamicView TEXT/A@{UB}

Dieser Befehl dient zum Ändern des Textes für die Beispieldarstellung im
Textfenster.


@{B}3.7        FlipHoriz, FlipVert@{UB}

Diese Befehle entsprechen den Werkzeugen zum horizontalen und vertikalen
Spiegeln.


@{B}3.8        FontExists PATH NAME/A SIZE/N/A STYLE EXACT/S@{UB}

Mit diesem Befehl läßt sich prüfen, ob die angegebene Schrift existiert.
Als Ergebnis wird in der Variablen RC entweder RC_OK oder RC_NOFONT
zurückgegeben.

Wenn die Option EXACT angegeben ist, werden auch die Schriftattribute
berücksichtigt, andernfalls lediglich Schriftname und -größe.


Zum Beispiel:

   FontExists NAME 'topaz' SIZE 8 EXACT        gibt RC_NOFONT zurück

   FontExists NAME 'topaz' SIZE 8 STYLE 'of'   gibt RC_OK zurück

   FontExists NAME 'topaz' SIZE 8              gibt RC_OK zurück

Das Attribut NAME läßt wie mit dem Befehl DeleteFont benutzen.


@{B}3.9        Get SETTING/A@{UB}

Dieser Befehl gibt in der Variablen RESULT den Wert der angegebenen
Einstellung zurück.

Beispiel:

   Get DVIEW

gibt 1 zurück, wenn das Testfenster geöffnet ist, andernfalls 0.


@{B}3.10       GetActivation CNUM/N@{UB}

Dieser Befehl setzt die Variable abhängig davon, ob der Aktivierungsstatus
des aktuellen Zeichens auf OFF oder ON steht, entweder auf 0 oder 1. Wird
der Parameter CNUM angegeben, wird der Status des entsprechenden Zeichens
geprüft.


@{B}3.11       GetAttr ASCII/S@{UB}

Dieser Befehl liefert die Schriftattribute der aktuellen Schrift. Ein
(dezimales) Ergebnis von 16384 (hexadezimal 0x4000) würde darauf
hinweisen, daß der aktuelle Font zur Anwendung von rechts nach links
entwickelt wurde.

Die folgende Liste enthält die Standarddefinitionen für
Schriftattribut-Bits beim Amiga:

   @{I}Attribut            Code          Kommentar @{UI}

   Kursiv              0x0001 *
   Fett                0x0002 *      Schließt Dünn aus
   Dünn                0x0004        Schließt Fett aus
   Unterstrichen       0x0008 *
   Outline             0x0010
   Schattenschrift     0x0020
   Hochgestellt        0x0040        Schließt Tiefgestellt aus
   Tiefgestellt        0x0080        Schließt Hochgestellt aus
   Breit               0x0100 *      Schließt Schmal aus
   Schmal              0x0200        Schließt Breit aus
   Invers              0x0400
   Serifenhaft         0x0800
   Schnelldruck        0x1000
   Konstante Breite    0x2000 *
   Rechts nach links   0x4000 *
   Querformat          0x8000

   * = Wird von ColorType benutzt

Ist die ASCII-Option angegeben, so wird das Ergebnis als normale
Zeichenkette im Format Größe+Attribute ausgegeben (z.B. "8 of").


@{B}3.12       GetChar@{UB}

Dieser Befehl gibt den Positionswert (0-256) des aktuellen Zeichens
zurück.


@{B}3.13       GetEnv@{UB}

Dieser Befehl gibt den Wert der aktuellen Arbeitsumgebung zurück (0 oder
1).


@{B}3.14       GetKern CNUM/N@{UB}

Dieser Befehl gibt den Kerningwert entweder des aktuellen Zeichens oder
des im optionalen Argument CNUM festgelegten Zeichens zurück.


@{B}3.15       GetPen BKG/S FRG/S GRID/S REMAP/S@{UB}

Dieser Befehl gibt eine Positionsnummer in der Palette (0-255) zurück, die
einem der folgenden Argumente zugeordnet ist:

   BKG    Hintergrundfarbe
   FRG    Vordergrundfarbe
   GRID   Rasterfarbe
   REMAP  Alternative Vordergrundfarbe (-1 = keine Farbe festgelegt)


@{B}3.16       GetRefPoint REF1/S REF2/S REF3/S REF4/S@{UB}

Dieser Befehl liefert die Position des angegebenen Referenzpunkts.


@{B}3.17       GetSpace CNUM/N@{UB}

Dieser Befehl liefert den Abstandswert des aktuellen Zeichens oder des
durch das aktuelle CNUM-Argument festgelegten Zeichens.


@{B}3.18       GetXSize CNUM/N@{UB}

Dieser Befehl gibt den Spaltenwert (Größe des Zeichens in X-Richtung) des
aktuellen Zeichens oder des durch das aktuelle CNUM-Argument festgelegten
Zeichens.


@{B}3.19       GetZoom@{UB}

Dieser Befehl gibt den aktuellen Vergrößerungsgrad zurück, welcher
abhängig von der Größe der Punkte auf dem Bildschirm (in Pixel) ist.
Beispiel: Ein Wert von 1 bedeutet "keine Vergrößerung", ein Wert von 20
hingegen eine entsprechend starke Vergrößerung.


@{B}3.20       Help KEY COMMAND/S IOFORMAT/S@{UB}

Dieser Befehl gibt eine Tabelle mit allen Rexx-Befehlen zurück (wenn das
Argument COMMAND angegeben ist), oder alle verfügbaren Ein-/Ausgabemodule
mit ihren Parametern und Optionen (Argument IOFORMAT).

Wird das Argument KEY verwendet, werden nur Informationen zum angegebenen
Element angezeigt.


@{B}3.21       IsBlank@{UB}

Dieser Befehl gibt den Wert 1 zurück, wenn das akutelle Zeichen leer ist
(d.h. nur aus der Hintergrundfarbe besteht), andernfalls 0.


@{B}3.22       ListFonts PATH@{UB}

Dieser Befehl gibt eine vollständige Liste der unter dem angegebenen Pfad
verfügbaren Schriften an. Wird kein PATH-Argument angegeben, so werden die
unter FONTS: verfügbaren Schriften aufgelistet.

Jede Zeile enthält neben den Schriftinformationen auch dessen
Standardgröße und die Attributdaten. Einige Beispiele:

   "topaz" 8 of
   "topaz" 9 oetf
   "topaz" 11 f
   "Diamond" 12
   "Diamond" 20
   "Emerald" 17
   "Emerald" 20
   "Garnet" 16
   "Garnet" 9
   "Personal" 8


@{B}3.23       LoadFont PATH NAME SIZE/N STYLE STRETCH/S NOSTRETCH/S@{UB}

Dieser Befehl dient zum Laden der angegebenen Schrift. Wenn eines der
Argumente NAME oder SIZE fehlt, wird automatisch das
Schriftenauswahlfenster geöffnet.

Mit Hilfe unterschiedlicher Optionskombinationen einschließlich FORCE läßt
sich ein bestimmtes Schriftformat auswählen, ohne das Fenster zur
Schriftauswahl zu öffnen.

Um die Schrift auf das korrekte Format zu skalieren, stehen die Optionen
"FORCE STRETCH" zur Verfügung.

Die Optionen "FORCE NOSTRETCH" dienen zum Laden der Schrift, ohne deren
Grafikdaten zu verändern. Es werden jedoch die aktuellen Fontformatwerte
übertragen.

Wird nur die Option FORCE benutzt, wird automatisch das Schriftformat der
angegebenen Schrift verwendet.

Wenn der STYLE-Parameter "s" angegeben wird, wird die Schrift immer exakt
in der angegebenen Größe geladen, d.h. diese wird evtl. von den
Schriftverarbeitungsroutinen der Systemsoftware erzeugt, falls noch nicht
vorhanden. Falls das "s" nicht angegeben wird und die genaue Größe nicht
vorhanden ist, wird die nächstliegende geladen.

Zum Beispiel:

   Load NAME 'topaz' SIZE 7          Lädt Topaz 8

   Load NAME 'topaz' SIZE 7 STYLE s  Staucht Topaz 8 auf Topaz 7


@{B}3.24       LoadImage FILE FORMAT PREVIEW/S STRETCH/S NOSTRETCH/S
           OPTIONS/M/F@{UB}

Dieser Befehl lädt ein Bild in das aktuelle Zeichen. Wenn das Argument
FILE nicht angegeben wird, öffnet sich automatisch ein
Dateiauswahlfenster.

Die Option PREVIEW schaltet den Vorschaubildschirm ein. Dessen Typ
(entweder HAM oder 24-Bit) ist abhängig vom verwendeten Grafiksystem.

Die Optionen STRETCH und NOSTRETCH funktionieren, wie in der Beschreibung
des Befehls LoadFont erläutert.

Das bzw. die Dateiformatargument(e) OPTIONS kann ausschließlich am Ende
der Argumentliste erscheinen.


@{B}3.25       LoadPalette FILE@{UB}

Dieser Befehl lädt die in der angegebenen Bilddatei enthaltene Palette.
Wenn das Argument FILE nicht angegeben ist, öffnet ColorType ein
Dateiauswahlfenster.


@{B}3.26       LockGUI@{UB}

Dieser Befehl sperrt die gesamte Verarbeitung von Benutzereingaben, mit
Ausnahme von Dateneingaben in Dialogfenstern. Mausbewegungen und
Tastaturbetätigungen bewirken daher im Hauptfenster des Programms nichts.
Während der Ausführung eines Makros kann der Benutzer diesen Modus durch
einen Druck auf die <Esc>-Taste wieder verlassen.


@{B}3.27       NewFont@{UB}

Entspricht dem Menübefehl Neue Schrift.


@{B}3.28       Paste@{UB}

Dieser Befehl fügt das gerade im internen Puffer gespeicherte Zeichen und
dessen Abstandsinformationen an der Position für das aktuelle Zeichen ein.
Dies entspricht der Aktivierung des Speicherwerkzeugs mit der rechten
Maustaste.


@{B}3.29       Request TITLE/A DESCR/A RESIZE/S KEEPCOL/S NOVSPACE/S@{UB}

Dieser ebenso mächtige wie flexible Befehl ermöglicht Rexx-Programmen die
Erstellung komplexer Dialogfenster auf dem Bildschirm von ColorType.

Das Argument TITLE legt den Titel des Dialogfensters fest.

Der Parameter DESCR beschreibt die in dem Dialogfenster verwendeten
Objekte.

Die Option RESIZE ermöglicht die Änderung der horizontalen und vertikalen
Abmessungen des Dialogfensters. Dabei läßt sich vertikale Größenänderung
nur dann aktivieren, wenn das Dialogfenster LIST-Objekte enthält.

Die Option KEEPCOL verhindert eine Veränderung der Bildschirmfarben. Wird
sie nicht aktiviert, ändert ColorType evtl. bei geöffnetem Dialogfenster
automatisch die Bildschirmfarben, wenn festgestellt wird, daß der Kontrast
einen bestimmten Wert unterschreitet.

Die Option NOVSPACE unterdrückt die automatische Estellung leerer Zeilen
zwischen Objekten.


@{I}Das Argument DESCR @{UI}

Dieses Einzelargument enthält eine Verkettung von Beschreibungsstrings für
Dialogfensterobjekte. Die einzelnen Unterstrings müssen nur dann in
doppelte Anführungszeichen ('"')gesetzt werden, wenn sie Leerzeichen
enthalten. Der einem Objekt zugewiesene Text kann auch mit einem
Unterstrich versehen werden, um einen Tastaturkurzbefehl festzulegen (z.B.
"_Weiter"). Doppelte Anführungszeichen bleiben als solche erhalten, wenn
ihnen ein Backslashzeichen ("\\") vorangestellt wird. Ein alleinstehendes
Backslashzeichen muß als doppelter Backslash ("\\\\") geschrieben werden.

In den folgenden Beispielen werden spitze Klammern verwendet, um
numerische Felder darzustellen. Die Klammern sind kein Teil der
Objektdefinition.

Die folgende Liste enthält alle Objekte für Dialogfenster, die im Argument
DESCR festgelegt werden können:


@{I}Texteingabefeld @{UI}

STRING = "Bezeichnung", <Maximale Zeichenanzahl>, "Standardtext"

Die Feldbezeichnung erscheint links vom Texteingabefeld und weist auf
dessen Funktion hin. Sie kann mit einem Tastaturkurzbefehl versehen
werden.


@{I}Zahleneingabefeld (Ganzzahlen) @{UI}

INTSTR = "Bezeichnung", <Minimalwert>, <Maximalwert>,
         <Anfangswert>

Dieses Objekt dient zum Erstellen eines normalen Zahleneingabefeldes mit
automatischer Prüfung des gültigen Bereichs und der Anzeige eines
Standardwerts. Für die Eingabe sind ausschließlich Ganzzahlen zugelassen.


@{I}Zahleneingabefeld (Kommastellen) @{UI}

INT10000STR = "Feldbezeichnung", <Minimalwert>, <Maximalwert>,
              <Anfangswert>

Während INSTR nur für Ganzzahlen verwendet werden kann, erlaubt
INT10000STR die Eingabe von Bruchzahlen mit bis zu vier Nachkommastellen.
Der Standardwert und der zurückgegebene Wert werden als Ganzzahlen
ausgedrückt, die äquivalent zur Bruchzahl multipliziert mit 10.000 sind.


@{I}Blättersymbol @{UI}

CYCLE = "Symbolbezeichnung", <Anzahl Positionen>, <Startposition>,
        "Text Position 0", "Text Position 1" [...]

Die Positionswerte beginnen bei 0.


@{I}Kontrollfeld @{UI}

CHECK = "Bezeichnung", <Standardstatus>

Als Standardstatus läßt sich wahlweise 0 (kein Häkchen) oder 1 (Häkchen)
einstellen.


@{I}Schiebereglersymbol (Werte) @{UI}

SLIDE = "Bezeichnung", <Minimalwert>, <Maximalwert>,
        <Standardwert>

Dies ist ein gewöhnliches Schiebereglersymbol zum Einstellen von Werten
innerhalb des festgelegten Bereichs. Beim Laden des Dialogfensters wird
ein Standardwert geladen.


@{I}Schiebereglersymbol (Farbenanzahl) @{UI}

COLSLIDE = "Bezeichnung", <Minimalwert>, <Maximalwert>,
           <Standardwert>

Dieser spezielle Schieberegler läßt nur die Einstellung von
Zweiterpotenzen bis 256 zu. Dabei werden Minimal-, Maximal-, Standard- und
Rückgabewerte in Bitplanes angegeben: 1, 2, 3, 4, 5, 6, 7 oder 8.


@{I}Scrollende Liste @{UI}

LIST = "Bezeichnung", <Anzahl Einträge>, <Standardauswahl>,
       <Horizontale Größe>, <Verticale Größe>,
       "Text Eintrag 0", "Text Eintrag 1" [...]

Dies ist eine gewöhnliche Amiga-Standardliste, die mit einem Titel
versehen werden kann. Die horizontale Größe wird in Zeichen angegeben,
wobei bei proportionalen Schriften deren Buchstabe "M" als Maßstab
verwendet wird. Die vertikale Größe wird in Zeilen angegeben und gibt die
Anzahl der Einträge an, die gleichzeitig sichtbar sind.


@{I}Text @{UI}

TEXT = "Text"

Hierbei handelt es sich nicht um eine Funktionseinheit, sondern um einen
einfachen, im Dialogfenser zentriert dargestellt Text.


@{I}Trennlinie @{UI}

SEPARATOR

Zeigt eine horizontal verlaufende Trennlinie an.


@{I}Leere Zeilen @{UI}

VSPACE = <Zeilenanzahl>

Dieser Befehl fügt eine Trennlinie aus leeren Zeilen ein, wobei die Zahl
der benötigten Bildschirmzeilen auf der Grundlage der Programmeinstellung
THICKY neuberechnet wird (Bit-Shift: Lines<<=THICKY), welche das
Größenverhältnis vertikaler Objekte der Benutzeroberfläche wiedergibt.


@{I}Aktionssymbole (Unterer Dialogfensterbereich) @{UI}

ACTION = "Symboltext"

Dies sind die Standard-Funktionssymbole, die am unteren Rand des
Dialogfensters plaziert sind. Wenn keine ACTION-Objekte verwendet werden,
erscheinen automatisch die Symbole "Weiter" und "Abbruch" am unteren
Fensterrand.

Die folgenden Symboltexte sind bestimmten Standardtexten abhängig von der
für die Benutzeroberfläche gewählten Sprache zugeordnet:

   ACTION = PROCEED   erzeugt ein "Weiter"-Symbol

   ACTION = CANCEL    erzeugt ein "Abbruch"-Symbol

   ACTION = OK        erzeugt ein "OK"-Symbol


@{I}Beispiele für Objekte @{UI}

STRING = "_Text eingeben:", 256, "Text"

INTSTR = "_Zahl eingeben:", -10, 10, 5

INT10000STR = "_Zahl eingeben:", -100000, 100000, 5000

CYCLE = "Blättern:", 2, 0, Erste, Zweite

CHECK = "Aktivieren:", 0

SLIDE = "Regler:", -10, 10, 5

COLSLIDE = "Farben:", 1, 8, 4

LIST = "", 3, 0, 30, 10, "Eins", "Zwei", "Drei"

TEXT = "Dies ist ein Text"

SEPARATOR

VSPACE = 2

ACTION = "Aktion"

ACTION = PROCEED

ACTION = CANCEL

ACTION = OK


@{I}Beispiele für Befehle @{UI}

Request '"Verarbeitung" "LIST = _Effekt:, 2, 0, 20, 3, Rise, Emboss"'

Request KEEPCOL RESIZE '"Test-Requester" ' ||,
'"STRING = ""Text eingeben:"", 256, ""Text"" ' ||,
'LIST = , 4, 0, 20, 3, Eins, Zwei, Drei, Vier ' ||,
'LIST = , 4, 0, 20, 3, Eins, Zwei, Drei, Vier ' ||,
'LIST = , 4, 0, 20, 3, Eins, Zwei, Drei, Vier ' ||,
'TEXT = Text"'


@{I}Hinweis: @{UI}Im o.g. Beispiel werden der Stringverkettungsoperator "||" und
das Zeilentrennzeichen Komma verwendet. Wenn eine Zeile auf ein Komma
endet, welches nicht Bestandteil eines Stringtokens ist, wird diese mit
der folgenden verbunden und wie eine einzige behandelt. Zwei
aufeinanderfolgende doppelte Anführungszeichen werden dazu verwendet, ein
einfaches Anführungszeichen in einen durch Anführungszeichen abgetrennten
String einzuschließen. Weitere Informationen lassen sich den Handbüchern
zu ARexx und der ARexx-Anleitung auf der Personal Suite CD-ROM entnehmen.


@{I}Rückgabewerte in RESULT @{UI}

Die Variable RESULT gibt die Position (beginnend bei 1) des ausgewählten
Aktionssymbols am unteren Fensterrand an. Zum Beispiel:

   Request '"Test-Requester" "TEXT = ""Wählen Sie:"" ' ||,
           'ACTION = A ACTION = B ACTION = C ACTION = D ACTION = E "'

   IF RC = 0 THEN SAY RESULT    /* 1 = "A", 2 = "B", 3 = "C"; ... */


Die Variablen RESULT.# (wobei "#" die Position des Objekts innerhalb des
Fensters angibt) werden dazu verwendet, die Werte der einzelnen Objekte im
Fenster zurückzugeben. Einfache Texte und Trennobjekte erhalten in dieser
Folge keine Position.

Zum Beispiel:

   Request '"Test-Requester" ' ||,
   '"STRING = ""Text eingeben:"", 256, ""Text"" ' ||,
   'INTSTR = ""Zahl eingeben:"", -10, 10, 5 "'

   IF RC = 0 THEN
      SAY 'Eingegebener Text:' RESULT.1
      SAY 'Eingegebene Zahl:' RESULT.2
   END


@{I}Rückgabewerte in RC @{UI}

Die Variable RC enthält normalerweise RC_CANCEL (5), wenn ein
"ACTION=CANCEL"-Symbol ausgewählt wurde, andernfalls RC_OK (0). Andere
Werte können verschiedene andere Bedingungen anzeigen, wie z.B.
Speichermangel.


@{B}3.30       RequestFile TITLE/A PATH FILE PROC CANC SAVEMODE/S FORMATS/S@{UB}

Dieser Befehl öffnet ein Dateiauswahlfenster und gibt die Auswahl zurück.

Die Argumente PATH und FILE lassen sich dazu nutzen, beim Öffnen des
Fensters Standardwerte zu laden.

Die Zeichenketten PROC und CANC können dazu verwendet werden, die
Standardtexte für die Weiter- und Abbruch-Symbole zu ändern.

Wenn die Option SAVEMODE gewählt wird, öffnet sich ein Dateiauswahlfenster
zum Speichern einer Datei. Dieser zeigt eine Sicherheitsabfrage für den
Fall an, das eine schon bestehende Datei überschrieben werden soll.

Ist die Option FORMATS angegeben, zeigt das Fenster auch eine Liste der
verfügbaren Dateiformate an.

Es folgen einige Beispiele möglicher Rückgaben in RESULT:

   "Work:Pictures/Moon.png"

   "Ram Disk:T/test" FORMAT "ILBM" OPTIONS "COMPR=1" "SCRFMT=1"


@{B}3.31       RequestFont TITLE/A PATH NAME SIZE/N STYLE PROC CANC
           SAVEMODE/S@{UB}

Dieser Befehl öffnet ein Schriftenauswahlfenster und gibt die Auswahl
zurück.

PATH, NAME, SIZE und STYLE werden zur Festlegung der Anfangs-Schriftwerte
verwendet (wie PATH und FILE im Dateiauswahlfenster).

Die Optionen PROC, CANC und SAVEMODE funktionieren, wie in der
Beschreibung zum Dateiauswahlfenster erläutert.

Es folgen einige Beispiele von Rückgaben in RESULT:

   "Workbench:fonts" "topaz" 8 of

   "ColorType:fonts" "MyTimes" 50


@{B}3.32       RequestNotify TITLE PROMPT/A OK SCROLL/S WORDWRAP/S
           WRAPCHECK/S@{UB}

Dieser Befehl dient zum Öffnen eines einfachen Hinweisfensters mit einem
Text und einem "OK"-Symbol.

Die Argumente TITLE und PROMPT werden zur Einstellung eines (optionalen)
Titels und des anzuzeigenden Texts verwendet.

Wenn die Option SCROLL verwendet wird, erscheint der Text in einem
scrollbaren und in der Größe veränderbaren Fenster, das sich besonders zur
Anzeige längerer Texte eignet. Standardmäßig wird der Text mit einer
nicht-proportionalen Schrift (wie Topaz) ohne Wortumbruch und mit
vertikalen und horizontalen Scrollbalken angezeigt.

Die Option WORDWRAP arbeitet mit SCROLL zusammen und bestimmt, ob der Text
vom Programm automatisch umbrochen wird. Die Umbruchfunktion fügt
Zeilenumbrüche an und wandelt einfache Zeilenumbruchzeichen und davor oder
danach auftretende Leerzeichen in ein einziges Leerzeichen um, um den Text
in der verfügbaren Fensterbreite darzustellen. Um Absätze voneinander zu
trennen, sollten zwei Zeilenvorschübe eingefügt werden. Um eine
unerwünschte Umformatierung von Tabellen zu vermeiden, läßt sich am Anfang
von Zeilen, deren ursprüngliches Format erhalten bleiben soll, ein
geschütztes Leerzeichen (Dezimalcode 160, <Alt+Leertaste>) einfügen.

Auch die Option WRAPCHECK funktioniert zusammen mit SCROLL. Sie ermöglicht
es dem Benutzer, die Umbruchfunktion wahlweise an- oder auszuschalten. Zu
diesem Zweck wird das Dialogfenster mit einem entsprechenden Kontrollfeld
versehen. Um die anfängliche Formatierungseinstellung festzulegen, lassen
sich WRAPCHECK und WORDWRAP auch kombiniert benutzen.


@{B}3.33       RequestPath TITLE/A PATH PROC CANC@{UB}

Dieser Befehl dient zum Öffnen eines Pfadauswahlfenster und gibt den
selektierten Pfad zurück. Er ähnelt dem Befehl RequestFile, allerdings
wird das Dateifeld nicht benutzt.


Es folgen einige Beispiele für mögliche Rückgaben in RESULT:

   "Work:FancyFonts"

   "Ram Disk:test dir/subdir"


@{B}3.34       RequestResponse TITLE PROMPT/A PROC CANC@{UB}

Dieser Befehl öffnet ein einfaches Dialogfenster, welches einen Text
anzeigt und dem Benutzer Aktionen wie "Weiter" und "Abbruch" ermöglicht.
Dementsprechend enthält die Variable RC entweder RC_OK oder RC_CANCEL. Zur
Änderung der voreingestellten Standardtexte können die Optionen PROC und
CANC verwendet werden.


@{B}3.35       SaveDView FILE/A FORMAT OPTIONS/M/F@{UB}

Dieser Befehl speichert den grafischen Inhalt des Testfensters in der
angegebenen Datei ab. Dabei werden die gleichen Argumente verwendet wie
beim Befehl SaveImage.


@{B}3.36       SaveFont PATH NAME@{UB}

Dieser Befehl dient zum Speichern der aktuellen Schrift. Wenn das Argument
PATH nicht angegeben ist, wird die Schrift in "FONTS:" gespeichert. Sollte
das Argument NAME fehlen, wird ein Schriftenauswahlfenster geöffnet.


@{B}3.37       SaveFontImage FILE/A FORMAT OPTIONS/M/F@{UB}

Dieser Befehl erzeugt eine Bilddatei, wie sie auch mit Hilfe des Schrift
zeigen-Befehls erstellt werden kann, und speichert diese in einer Datei
mit dem angegebenen Namen ab. Dabei werden die gleichen Argumente
verwendet wie beim Befehl SaveImage.


@{B}3.38       SaveImage FILE FORMAT OPTIONS/M/F@{UB}

Dieser Befehl speichert ein Bild des aktuellen Zeichens im angegebenen
Format in einer Datei mit dem angegebenen Namen ab. Fehlt diese, wird ein
entsprechendes Dateiauswahlfenster geöffnet.

Die Optionen FORMAT und OPTIONS erlauben dem Benutzer die Auswahl des
gewünschten Dateiformats und das Einstellen bestimmter Optionen, die
dieses Format betreffen. Wenn kein Dateiformat festgelegt wurde, wird
automatisch entweder das ursprüngliche (Lese-) Format verwendet, oder das
Format IFF-ILBM (wenn das Bild nicht geladen, sondern neu erstellt worden
ist).


@{B}3.39       SavePalette FILE@{UB}

Dieser Befehl speichert die aktuelle Palette als IFF-Palettendatei.


@{B}3.40       ScreenToBack@{UB}

Dieser Befehl legt den Programmbildschirm hinter die aller anderen
Programme.


@{B}3.41       ScreenToFront@{UB}

Dieser Befehl holt den Programmbildschirm vor die aller anderen
Programme.


@{B}3.42       Set STRETCH/S PARAMS/M/F@{UB}

Dieser Befehl dient zum Setzen einer oder mehrerer
Programmvoreinstellungen. Seine Anwendung entspricht damit dem Laden von
Einstellungen aus einer Einstellungendatei.

Die Optionen "FORCE STRETCH" können dazu verwendet werden, die Schrift
ohne weitere Sicherheitsabfragen auf ein anderes Format zu skalieren.

Da sowohl ColorType als auch die Amiga-Rexxschnittstelle zur Übergabe von
Stringargumenten Anführungszeichen verwenden, müssen zwei unterschiedliche
Ebenen verwendet werden (einfache und doppelte Anführungszeichen).

Zum Beispiel:

   Set 'FORCE "XMAX=20" "YMAX=40" "COLORS=8"'
   Set 'FORCE STRETCH "XMAX=60" "YMAX=60"'


@{B}3.43       SetActivation STATUS/N/A@{UB}

Dieser Befehl ändert den aktuellen On/Off-Aktivierungsstatus eines
Zeichens.


@{B}3.44       SetAttr ATTR/N/A SET/S CLEAR/S CHANGE/S@{UB}

Mit diesem Befehl lassen sich ein oder mehrere Schriftattribute
modifizieren. Wird keine Option angegeben, so wird der ursprüngliche Wert
einfach durch den neuen ATTR-Wert überschrieben.

Die Optionen SET, CLEAR und CHANGE dienen zur selektiven Änderung nur
derjenigen Bits, die im ATTR-Wert aktiv sind, d.h. die anderen
Einstellungen bleiben unverändert. SET aktiviert die Einstellungen
(logisches "OR"), CLEAR löscht die Einstellungen (logisches "AND ON
ATTR"), und CHANGE schaltet zwischen den Einstellungen um (logisches
"XOR").


@{B}3.45       SetChar CHAR/N PREV/S NEXT/S PREVON/S NEXTON/S FIRSTON/S
           LASTON/S@{UB}

Mit Hilfe dieses Befehls läßt sich ein bestimmtes Zeichen zum aktuellen
machen. Der gültige Bereich für das Argument CHAR liegt zwischen 0 und
256, wobei 256 das undefinierte Zeichen darstellt. Folgende weitere
Auswahlverfahren stehen zur Verfügung:

   PREV      Vorheriges Zeichen
   NEXT      Nächstes Zeichen
   PREVON    Vorheriges aktiviertes Zeichen (On)
   NEXTON    Nächstes aktiviertes Zeichen (On)
   FIRSTON   Erstes aktiviertes Zeichen (On)
   LASTON    Letztes aktiviertes Zeichen (On)


@{B}3.46       SetEnv ENV/N/A@{UB}

Dieser Befehl aktiviert eine der beiden Arbeitsumgebungen (0 oder 1).


@{B}3.47       SetKern KERN/N/A@{UB}

Dieser Befehl setzt den Wert für das Zeichenkerning.


@{B}3.48       SetPen BKG/N FRG/N GRID/N REMAP/N@{UB}

Dieser Befehl setzt eine oder mehrere Farben auf bestimmte
Paletteneinträge.

   BKG    Hintergrundfarbe
   FRG    Vordergrundfarbe
   GRID   Rasterfarbe
   REMAP  Umgewandelte Vordergrundfarbe (-1 = keine Farbe eingestellt)


@{B}3.49       SetRefPoint REF1/N REF2/N REF3/N REF4/N@{UB}

Dieser Befehl legt die Position eines oder mehrerer Referenzpunkte fest.
Referenzpunkt 3 bestimmt die Grundlinie der Schrift.


@{B}3.50       SetSpace SPACE/N/A@{UB}

Dieser Befehl legt den Abstandswert des Zeichens fest.


@{B}3.51       SetXSize XSIZE/N/A@{UB}

Dieser Befehl legt den Wert für die Zeichenbreite in Spalten fest.


@{B}3.52       SetZoom DOTHEIGHT/N BEST/S@{UB}

Dieser Befehl dient zur Festlegung des Vergrößerungsgrads, der sich auf
die Anzahl vertikaler Bildpunkte bezieht, die zum Erzeugen eines einzelnen
Punktes auf dem Bildschirm benötigt werden. Ein Wert von 20 bewirkt
beispielsweise, daß jeder Punkt eines Zeichens 20 Pixel groß, d.h. stark
vergrößert, angezeigt wird. Ein Wert von 1 bedeutet keine Vergrößerung.
Gerade bei langsameren Computern wird durch diese Einstellung die
Arbeitsgeschwindigkeit teilweise drastisch erhöht, wodurch sie sich z.B.
besonders zur Beschleunigung von Makros empfiehlt, bei denen alle Zeichen
einer Schrift nacheinander bearbeitet werden.

Durch die Verwendung der Option BEST wird sichergestellt, daß das Programm
automatisch die höchstmögliche Punktgröße wählt, bei der das Zeichen noch
vollständig innerhalb der Bildschirmränder dargestellt werden kann.


@{B}3.53       ShiftDown, ShiftLeft, ShiftRight, ShiftUp@{UB}

Diese Befehle entsprechen den vier Verschiebesymbolen in der
Werkzeugleiste. Mit ihnen läßt sich die Anzeige des aktuellen Zeichens
pixelweise in die gewünschte Richtung verschieben.


@{B}3.54       UnlockGUI@{UB}

Dieser Befehl hebt die Wirkung des Befehls LockGUI wieder auf. Der
Benutzer kann dann auf dem Hauptbildschirm wieder wie gewohnt Eingaben
tätigen.


@{B}3.55       Version PROGRAM/S REXX/S@{UB}

Dieser Befehl gibt wahlweise die Versionen des Programms oder der
ARexx-Schnittstelle zurück. Standardmäßig wird die Programmversion
zurückgegeben.

@ENDNODE
