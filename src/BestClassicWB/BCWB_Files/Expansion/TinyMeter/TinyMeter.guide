@database 07e609c0-0
@master Stuff:TinyMeter/TinyMeter.guide
@$VER: 4.31
@author "Tinic Urou"
@(c) "1995"
@remark Created with Heddley v1.1 (c) Edd Dumbill 1994

@node "Main" "TinyMeter V4.31 AmigaGuide documentation"
@next "What is TinyMeter"
@prev "Main"
@{fg fill}------------------------------------------------------------------------------
@{b}@{fg shine}  ______ __ _____ __ __ _______  _____ ______ _____ _____    __ __     ____
 |__  __Y  Y     Y  Y  Y        Y  ___Y__  __Y  ___|  _  |  |  |  |   |___  |
   |  |/_ /_  | /_  __/_  |  | /_  __|  |  |/_  __/_     <  |__   | _ |___  |
   |  | |  |__|  |_____|__|__|  |_____| |  | |_____|__|  |     |__||_||_____|1
   `--' `--'  `--'           `--'       `--'          `--'@{ub}@{fg text}
			   @{b}@{bg fill}THE DashBoard for Amigas.@{ub}@{bg back}
@{fg fill}------------------------------------------------------------------------------@{fg text}

     @{"  Introduction   " link "What is TinyMeter" 0}   What's that thing?
     @{"   What's new?   " link "New" 0}   New Features and bugfixes in 4.31!

     @{"  Requirements   " link "Requirements" 0}   Ya need a Draco!
     @{"  Installation   " link "Installation" 0}   How to install it on your harddisk
     @{"      Usage      " link "Usage" 0}   How do I use TinyMeter
     @{"      Prefs      " link "Prefs" 0}   The preferences program
     @{"      Tips       " link "Tips" 0}   Some instructions for the configuration
     @{" Troubleshooting " link "Troubleshooting" 0}   If you're having some problems
     @{"      Bugs!      " link "Bugs!" 0}   They're always in...

     @{"    The Author   " link "The Author" 0}   That's me
     @{" To Do / Future  " link "Future" 0}   TinyMeter will become the ultimate tool!
     @{"       No!       " link "No" 0}   What I won't implement
     @{"     History     " link "History" 0}   Very interesting!
     @{"   Legal Stuff   " link "Legal Stuff" 0}   Hey this is GiftWare!

@{fg fill}------------------------------------------------------------------------------
@{fg text} 31.May  1996                                       © 1995-1996 by Tinic Urou
@{fg fill}------------------------------------------------------------------------------@{fg text}
@endnode

@node "What is TinyMeter" "What is TinyMeter"
@next "New"
@prev "Main"

    @{b}@{fg shine}TinyMeter 4.31@{ub}@{fg text} is a tool to show the memoryusage, the volumesusage, the
    date&time and the cpu usage, with useful informations which are selectable.
    Additionaly you can use TinyMeter to start your programs, a bit like
    Toolmanager.

    It is called TinyMeter, because the first version really only showed
    ChipMem and FastMem in a very small window. Since that time TinyMeter
    has grown and I didn't want to change the name...

    Look at the @{"preview picture" link "Preview/main" 0}

    @{b}@{u}Features:@{ub}@{uu}

    - @{b}Launches programs@{ub} with easy to use launcher menus.

    - Shows  @{b}base-ram@{ub} after  bootup.  It  is  good to know how much memory
      the  startup-tools take and if the applications really freed all the
      memory or if your bbs got uploads etc.

    - Uses the @{b}ScreenNotify.library@{ub} to automatically detect  the  changing
      of screenmode or font on the Workbench. On any other PublicScreen
      closing of the screen is recognized.

    - Can be opened on any @{b}PublicScreen@{ub}.

    - @{b}snaps the actual Workbench background@{ub} if desired

    - @{b}many options for the design/look@{ub}

    - Can use a @{b}background picture@{ub} via Datatypes.

    - @{b}Font sensitive@{ub}

    - displays free memory with @{b}c-style formatting codes@{ub} to be
      very flexible.

    - its a @{b}commodity@{ub}

    - etc 8)
@endnode

@node "Installation" "Installation"
@next "Usage"
@prev "Requirements"

    @{b}@{u}Automatic:@{ub}@{uu}

    Use the Installer icon


    @{b}@{u}Manual:@{ub}@{uu}

    - Copy "TinyMeter" and "TinyMeter.info" to WBStartup.
    - Copy "Prefs/TinyMeter" and  "Prefs/TinyMeter.info"
      to SYS:Prefs.
    - Copy the contents of "Libs" into your LIBS: assign
    - Start "TinyMeter", setup desired size  and  position.  Press
      "S" to save these settings.
    - Setup the other configurations by starting "Sys:Prefs/TinyMeter".
@endnode

@node "Usage" "Usage"
@next "Bugs!"
@prev "Installation"

    @{b}@{u}Usage of "TinyMeterPrefs":@{ub}@{uu}

	Please read @{"Prefs" link "Prefs" 0} for this.

	TinyMeterPrefs supports the bubblehelp from MUI3.1. Most of
	the gadgets have a little help.
	Simply leave the mouse over a gadget for a while, and the
	help will appear.

    @{b}@{u}Usage of "TinyMeter":@{ub}@{uu}

    @{b}MouseAreas:@{ub}

	Upper left corner:      End TinyMeter
	Lower right corner:     Size TinyMeter  by  holding  the  left
				mousebutton
	Other Areas:            Move TinyMeter  window  by holding the
				mousebutton

    @{b}Supported Keys:@{ub}

    @{i}(NOTE: Do not forget to click first on the TinyMeter window before
	   you use these keys ! )@{ui}

	"q" or "Q"              Quit TinyMeter

	"s" or "S"              Saves window-position and size

	"f" or "F"              Flushes the memory like "c:avail flush"
				All unused libraries, fonts etc. are
				removed from the memory.

	"b" or "B"              If you selected snap-mode, you can refresh
				the background with this.

	RIGHT MOUSEBUTTON       redefines   base  ram  to  the  actual
				memoryusage

    Any other questions? Write @{"me" link "The Author" 0}.
@endnode

@node "The Author" "The Author"
@next "History"
@prev "Bugs!"
-   --  --- ------------------------------------------------------ ---  -- -


			  @{b}To contact the author email to:@{ub}

			  @{b}@{fg shine}5uro@informatik.uni-hamburg.de@{ub}@{fg text}

	  (the old address tinic@tinic.mayn.sub.de is @{b}not valid@{ub} anymore!)

				  @{b}or snail to:@{ub}

				  @{b} @{fg shine}Tinic Urou
				Gaertnerstr. 15
				 20253 Hamburg
				  - GERMANY -@{ub}@{fg text}

		If you want to talk on @{b}IRC@{ub}, leave me an email.

-   --  --- ------------------------------------------------------ ---  -- -
@endnode

@node "Legal Stuff" "Legal Stuff"
@next "Main"
@prev "Legal Stuff"

    @{b}TinyMeter 4.xx is GIFTWARE.@{ub}

    If you think this program is good and you regulary use it then  simply
    send  me  a little gift of your choice as a reward for my hard work...
    I'd also like some feedback from the users via email... 8)

    @{b}@{i}Copyright@{ub}@{ui}

    TinyMeter is written and copyright © 1994-1996 by Tinic Urou. No parts
    of this program may be modified (patched, recompiled) to a new program
    named TinyMeter.
    Ideas, techniques and the interface from this program  can  be  freely
    adopted to other programs.

    @{b}@{i}Disclaimer@{ub}@{ui}

    The author is in no way liable for any changes made to any part of the
    program, or consequences thereof as he is in no way liable for damages
    or loss of data directly or indirectly caused by this software.

    @{b}@{i}Distribution@{ub}@{ui}

    Neither fees may be charged nor profits may be  made  by  distributing
    this  piece  of software. CD Manufactures are specifically granted the
    right to include this program on CD collections, as long as  they  are
    for the Public Domain.

-------------------------------------------------------------------------------

			      This application uses


			    MUI - MagicUserInterface

		    (c) Copyright 1993/94 by Stefan Stuntz


    MUI is a system to generate and maintain graphical user interfaces. With
    the  aid  of  a  preferences program, the user of an application has the
    ability to customize the outfit according to his personal taste.

    MUI is distributed as shareware. To obtain a complete package containing
    lots of examples and more information about registration please look for
    a  file  called  "muiXXusr.lha"  (XX means the latest version number) on
    your local bulletin boards or on public domain disks.

	      If you want to register directly, feel free to send


			     DM 30.-  or  US$ 20.-

				      to

				 Stefan Stuntz
			    Eduard-Spranger-Straße 7
				 80935 München
				    GERMANY

-------------------------------------------------------------------------------
@endnode

@node "History" "History"
@next "Legal Stuff"
@prev "The Author"

    1.0 (10.6.1995) - First public release

    1.1 (14.6.1995) - Added screennotify.library support
		    - Added DOUBLEBORER
		    - Added RIGHT MOUSEBUTTON-support

    2.0 (24.6.1995) - code completly redone in GNU C.
		    - Added Preferences program.
		    - Added Prefsfile and removed Tooltypes.
		    - No longer uses prepainted picture.
		    - Now fontsensitive.
		    - Now the window is sizeable.
		    - Added "S" to save window settings
		    - Added realtime window-moving and -sizing

    2.1 (27.6.1995) - fixed some bugs in publicscreen-handling
		    - made code smarter
		    - shows now free amount of memory
		    - refresh interval can be set
		    - screennotify.library can be turned off

    2.2 (10.7.1995) - Added Test Button
		    - removed iff.library usage and replaced
		      it with datatypes.library
		    - Largest block display
		    - free mem display
		    - removed bug displaying big fastmem values
		    - optimized code
		    - Added installer script

    2.3 (19.7.1995) - Preferences now work on a 640x256 screen
		    - Preferences texts redone
		    - CANCEL button does now what he should do.
		    - fixed an internal bug in the message system
		    - Close button does now what he should do
		    - added flush memory key
		    - Backgroundcolor of gauge now selectable
		    - rework on the documentation

    3.0 (01.8.1995) - only works with OS3.0+ since 2.2, sorry!!
		    - removed nasty bugs with 68040 processor
		    - added 3D Gauges
		    - added Window to Front and Window to back option
		    - added NoBorder option
		    - Position of window can now be set manually
		    - Texts for "CHIP", "FAST" & "RETINA" can now be
		      set manually
		    - introduced c-style formatting codes for numbers
		    - Largest block & mem line removed and replaced
		      with InfoLine_1 and InfoLine_2
		    - Bordersizes selectable
		    - background color of TinyMeter selectable
		    - changed way how to display gauges completly,
		      so its now possible to make more gauges in future
		    - Total Mem gauge added
		    - Retina Memory added
		    - added tiling of background picture
		    - No Base mem display-flag added
		    - Border for gauges can be turned off
		    - Space between gauges now selectable
		    - "Q"-key added to end TinyMeter
		    - slightly optimized the code.
		    - added volumesusage
		    - added 'P'-Key to run preferences program
		    - fixed bug when screennoify was selected and
		      used
		    - added Refreshtime for volumes
		    - normal window-moving added
		    - snap from TinyMeter added

    3.1 beta 1
	(06.8.1995) - Colorrequester did not work with screen with
		      more than 16 colors, it simply crashed (Oops!)
		    - volumes which are not available are now ignored
		      no more requests!
		    - Colorrequester now uses reqtools.library IF
		      available
		    - ScreenNotify-selection-bug removed.
		    - added Digital Clock + some fonts for this
		    - all displays are now buffered using an own
		      bitmap. No flickering anymore!
		    - Gauges can now be turned off, keeping the texts
		      with throughshinig background
		    - A MinSize for the window is now defined,
		      since the machine crashes using the
		      BltBitMapRastPort with negative numbers
		    - removed some unnecessary time_requests
		    - memory, volumes and clock position can now be
		      set to: left, right, center
		    - rework on the volumes routines
		    - TinyMeter now uses himself a priority "-3"

    3.1 beta 2      - redone some of the code, now smaller
		    - tried to fix a Enforcer hit.
		    - tried to fix the trashing on a A4000/040
		    - made ClipBlit sure, all coordinates are checked.
		    - made RectFill sure, all coordinates are checked.

    3.1 beta 3      - tried to fix a Enforcer hit.
		    - splitted the source to speed up compiling.

    3.1 public beta
	(30.08.95)  - finished MUI-Preferences program.
		    - added "o" for occupied size in the textformat.

    3.2 public beta - fixed a big bug saving the prefs in TinyMeterPrefs
	(01.08.95)  - "hh:mm" "hh:mm:ss" exchanged
		    - added possibility to select y-size of gauges.
		    - removed IDCMP_MOUSEMOVE in the main handler,
		      now temporaly activated when using Opaque-effect
		      and clicking the mousebutton.
		      That should fix some of the lockups...
		    - moved color-page into design-page.
		    - magicwb-demo-prefs did use my System: Assign ( ;^) )
		      changed it to SYS:
		    - Installer-script produced garbage
		    - used shortrel to reduce size and to gain speed

    3.3 (05.09.95)  - TinyMeter is now a commodity
		      supported events:
			· Disable/Enable
			· Kill
		    - fixed a bad behavior, when "Workbench" was selected
		      as PublicScreen, screennotify was not activated.
		      This is now checked.
		    - DatatypeObject is now freed after the background
		      has been drawed. This slows down resizing,
		      but will save a bit of memory
		    - painted some new icons
		    - rework on the guide-file

    3.31 (08.09.95) - a datatypeobject was allocted two times and only
		      freed one time, that could mean a big lost
		      of chipmemory
		    - compiled with gcc 2.7.0 + option "-fbaserel". That
		      saved 2KB!

    3.4  (12.09.95) - added snapping of Workbench-background, notification
		      for WBPatterns.prefs was also added, to use pattern
		      switchers like MagicSelector.
		    - code for opaque-effect was removed, its not neccesary
		      I think.
		    - Volume-Indent was saved wrong by TinyMeterPrefs.
		    - thousand seperators now use a "," instead of a "."
		      To get a "." you'll have to use the new option "T".
		    - added possibilty to select number of colums.
		      that was really a hard work!!
		    - redone bacground code, TinyMeter will again not free
		      the datatype-object until TinyMeter is quitted.
		      Some persons reported a pen problem...

    3.5  (17.09.95) - fixed a VERY big bug in the textdisplay routines.
		      I think, they caused the Enforcer hits...
		    - added locale.library support, some work to do...

    3.51 (22.09.95) - a bad PortName was created. Caused some Enforcer Hits.
		      Thanks to Chad Randall for the tip...
		    - Fixed a display bug.

    3.52 (05.10.95) - Two ports were initialized with the same name.
		      Caused problems, since I didn't checked
		      if the allocation was correct. (poor programming 8))
		      They were problems with WarpSPELL, PPaint etc.
		    - clock can now be above the gauges
		    - NoBaseMem-function does now work correctly
		    - If TinyMeter was not running, snapping gave bad coords.

    3.6  (09.11.95) - TinyMeter caused Enforcer hits, when the clock was
		      turned off.
		    - added system idle gauge, code was from cpuload2
		    - AM/PM format added
		    - complete sourcecode added to the archive... Look at
		      the bad code 8)

    3.62 (16.11.95) - Disabling the clock and date reworks again...
		    - Problem with white gauges should have disappeared
		    - added ShadowText (Thnx to 'Nudel' for the suggestion!)
		    - Color selector reworks under MUI3. Muimaster.library
		      version 11 is checked...

    4.00b(29.12.95) - Entirely rewritten. Now uses own boopsiclass for the
		      gauges.
		    - Clock was removed.
		    - Infolines were removed.
		    - New Preferences system, supporting own settings for
		      every gauge.
		    - Own Font for every gauge.
		    - Gaugetypes for largest blocks added.
		    - Historymeter added.
		    - Bordertype "Simple" added
		    - Gaugetype "Space" added
		    - Penallocation system added.
		    - Fixed Always to Front
		    - Fixed Always to back changing it to BackDrop...
		    - Worked a bit on the speed.
		    - Completly new preferences program using MUI3.1 features,
		      too many news to mention them here 8))

    4.01 (01.01.96) - readded a clock-function
		    - Changed the design of Historymeters
		    - Removed some bad Enforcer hits from TinyMeterPrefs.
		      (They caused the crashes at startup)
		    - Speeded up some functions, esspecially the handler
		    - Speed up the gauges by checking, if there were really
		      any changes.
		    - Screennotify now works correctly.
		    - Removed nearly all "SetGadgetAttrs" and replaced
		      them with a SetAttrs-RefreshGlist pair, because
		      it caused deadlocks every second. A really bad behavior
		      of gadgetclass!! Even the orginal RKM BOOPSI demos
		      contain this problem...
		    - fixed memorytrashing by the gauges. Caused bad crashes.
		    - Historymeter can now have a troughshining background.
		    - fixed problem with empty labels
		    - small enhancements in TinyMeterPrefs, f.ex. a help
		      button the the formatting codes
		    - Historymeter shows now occupied cpu usage

    4.02 (09.01.96) - changed stacksize, since it crashed on some machines.
		    - some screens were not closed, since TinyMeter did not
		      response on some messages from the screennotify.library
		    - TinyMeterPrefs crashed, if no preferences file was
		      available.
		    - renamed TinyMeterPrefs to TinyMeter...

    4.03 (02.02.96) - slighty optimized display speed of gauges.
		    - Clock now understands proportional fonts without
		      graphical trash.
		    - fixed another stupid bug in the screennotify support...
		    - added italian and polnish catalogs
		    - task priority now selectable
		    - datatypes objects are now freeded when TinyMeter quits,
		      otherwise, the colors are not locked...
		    - fixed default settings of TinyMeter.

    4.10 (05.02.96) - again optmized the code
		    - added 'f' to the format code
		    - optmized volumes routines. It should be much faster
		      and stabler now!
		    - volumes now understands the different types. It now
		      displays if a volume is f.ex. not present.
		    - added 'v' to the format code. It displays the volume
		      filesystem type like "DOS\1" or "AFS\0".
		    - enhanced this guide
		    - introduced "falling colums"
		    - changed Layout of Preferences program. Now needs less
		      space.
		    - enhanced Installer script
		    - reduced unnessary stackusage (means, i removed
		      some function arguments and variables)
		    - fixes some memory losses after quitting TinyMeter

    4.11 (06.02.96) - Opps. TinyMeter did not load backgrounds

    4.20 (10.03.96) - Added Launcher type. Workbench and CLI program are
		      supported until now.
		    - recompiled whole program with DICE. GCC produced bad
		      crashes with some methods of gadgetclass which I do
		      now need for the launchclass. In previous version I
		      used a workaround for it.
		      The result is that the program now is about 10KB
		      bigger 8((
		    - fixed serious bug in the handler.
		    - optimized speed of historymeters
		    - minor fixes
		    - added Clone button the composer list page.
		    - removed most of the gotos, i hate these things... ;-)
		    - improved border rendering
		    - removed some unnessesary code
		    - added pictograms to the launchers. Now it looks like
		      Windows95 8)
		    - Redrawing of the gadgets is now better and faster
		      when snapping the background and resizing the window.

    4.21 (14.03.96) - fixed Enforcer hit when using Commodity function.
		    - fixed default settings in TinyMeterPrefs
		    - Pens are now freed on exit.
		    - GaugeClass now 99% reentrant.
		    - Comsumes a bit less memory (scanned data structs for
		      unused vars) and unified some of them.

    4.22 (21.03.96) - TinyMeter launcher listview now makes use of AppWindow
		      features, like ToolManager. Simply drag icons into the
		      list.
		    - fixed problem using DirectoryOpus as a Workbench
		      replacement
		    - fixed historymeters
		    - now uses the new wbstart.library
		    - again fixed bug in handler... I hate this!
		    - wbpatterns.prefs notification was buggy
		    - fixed CTRL-C problem
		    - if a launcher has only one entry it is executed
		      directly without openning the window
		    - added indents for gadgetlabel
		    - added french catalog
		    - added german and french installer languages

    4.23 (23.03.96) - TinyMeter now uses MemoryPools for most memory
		      allocations.

    4.30 (06.05.96) - Appwindow features are now fully used. drag an icon
		      to an entry or to a launchergadget and select it.
		    - Modified method of redrawing gauges. Now there should
		      be less lockups
		    - Hopefully fixed problem with testing the settings.
		    - added Iconlauncher.
		    - pictograms are now painted using the transparent color.
		    - fixed bad enforcer hit in historymeters.
		    - speeded up historymeters.
		    - fixed corrupt memory list error on exit. they where [-1]
		      accesses 8(( Simple changed my allocation routine... ;-))

    4.31 (31.05.96) - cleaned up code
		    - fixed bad bug in the PathList handling
		    - hopefully fixed backgrounds of gauges
		    - fixed address error in the string functions.
		    - recompiled with SAS. What a difference... Now its
		      time to do it with the preferences program 8))
@endnode

@node "Bugs!" "Bugs!"
@next "The Author"
@prev "Usage"

    - starting virtual memory tools like VMem, can cause strange effects.
      I know the problem and I will remove it in one of the next versions.

    Please write @{"me" link "The Author" 0}, if you find any bugs!!!
@endnode

@node "New" "Whats new in 4.31?"
@next "Requirements"
@prev "What is TinyMeter"

    Changes since 4.22:

    - Added Iconlauncher. Use now pictograms directly on TinyMeter.
      Look at the preview to see how this can be used.

    - Pictograms can now use the transparent colors. Looks nice, when
      used with Iconlaucher...

    - Appwindow features are now fully used. drag an icon
      to an entry or to a launchergadget and select it.

    - TinyMeter now uses memory pools for most allocations.
      This should avoid some memory fragmentation.

    - Modified method of redrawing gauges. Now there should
      be less lockups

    - Hopefully fixed problem with testing the settings.

    - cleaned up code

    - fixed bad bug in the PathList handling

    - hopefully fixed backgrounds of gauges

    - fixed address error in the string functions.

    - recompiled with SAS. What a difference... Now its
      time to do it with the preferences program 8))




    Have also look at @{"History" link "History" 0}
@endnode

@node "Requirements" "Requirements"
@next "Installation"
@prev "Requirements"

    @{u}To run TinyMeter, you will need:@{uu}

    - Any Amiga with AmigaOS 3.0+

    - MUI 3.1+ 
      @{b}@{i}MUI is only required for the Preferences program!@{ub}@{ui}

    - enough memory 8)
@endnode

@node "Future" "To Do / Future"

    @{u}These are the features I want to include in future versions:@{uu}

    For one of the next versions:

    - fixing bugs...
    - some kind of a browser
    - Real starter gadgets without creating a list
    - own color for the popupmenu
    - More control for the layout of the launcher gadgets

    For version 5.0:

    - Multiple banks/windows. This will result in better
      control over the layout.
    - Submenus. I will use the special listtree class of MUI for
      the preferences.
    - Hotkeys for launcher entries
    - More program types: NetWork and ARexx, which ToolManager also
      offers.
@endnode

@node "Troubleshooting" "Troubleshooting"

    @{u}These are the most asked questions:@{uu}

    Q: TinyMeter produces Revoverable Alerts on my machine.
    A: 1. Check, if you really have "screennotify.library" in your LIBS:
	  assign.
       2. Remove "retina.library" from your LIBS: assign if you don't have
	  a Retina-GFX card.

    Q: TinyMeter 4.31 produces garbage on my machine.
    A: Try deleting "ENV:TinyMeter" and "ENVARC:TinyMeter" and remaking
       the prefs.

    Q: The installer quits with a error when he installs the backgrounds.
       Why?
    A: You surely already use one of my supplied backgrounds on your
       Workbench. Simply delete them in the ArtWork/Patterns directory
       and restart the installer.

    Q: TinyMeter eats up much processor-time on my machine. I am using a
       68000.
    A: Try to select a higher volumerefresh (> 30secs) and memoryrefresh
       (> 10 secs).

    more to follow...
@endnode

@node "Tips" "Configuration Tips"

    @{b}---     Volumes@{ub}

	    · Do not try do display volumes which are not mounted before
	      TinyMeter was started, otherwise TinyMeter will open requesters.

    @{b}---     Fonts@{ub}

	    · GENERAL:   If a font seems to be placed too high or too low in
	      the  gauge,  take  a  tool like "FED" and change the baseline,
	      which is not correct in many fonts.  Best  examples  for  good
	      baseline   choice  are  the  fonts  from  the  MagicWB-package
	      (XHelvetica, XCourier, XEN etc.)

	    · GAUGES:   Preferably use fonts with a small  width.  Otherwise
	      the  formatted  text  or  the label cannot be displayed or the
	      Windowsize will be automatically adjusted.

	    · GAUGES:   Sometimes, the font will  be  drawed  over  borders,
	      which  doesn't  look good. Simply selected a higher height for
	      the gauges.

    @{b}---     Formatting texts@{ub}

	    The format specifier is scanned to determine what  to  show  on
	    the  display.  Characters are copied to the output until a % is
	    encountered. %% indicates a literal '%'  character.  Otherwise,
	    the  %  is  followed by a control sequence that tells TinyMeter
	    what to display.

	    @{u}Gauges and Historymeter:@{uu}

		%[Options]d - Free bytes/amount
		%[Options]b - Free base bytes/amount
		%[Options]p - Free percent
		%[Options]a - total installed
		%[Options]f - difference between base and current memory
		%v          - ONLY FOR VOLUMES: Filesystem ID


		The options (Note, that the following order must be
			     maintained if you use more than one option!):

		t - thousands seperator                         3,566,345
		T - thousands sepeperator with a point          3.556.345
		k - show kilobytes                                   3472
		m - show megabytes                                      3
		o - show occupied size

		Examples:

		"%td KBytes free"           --->    3,566,345 Bytes free
		"%tkd free, %tkop used"     --->    3,472 free, 625 used


	    @{u}Clocks:@{uu}

		The clock uses the "FormatDate"-function from the
		locale.libary:

		%a - abbreviated weekday name
		%A - weekday name
		%b - abbreviated month name
		%B - month name
		%c - same as "%a %b %d %H:%M:%S %Y"
		%C - same as "%a %b %e %T %Z %Y"
		%d - day number with leading 0s
		%D - same as "%m/%d/%y"
		%e - day number with leading spaces
		%h - abbreviated month name
		%H - hour using 24-hour style with leading 0s
		%I - hour using 12-hour style with leading 0s
		%j - julian date
		%m - month number with leading 0s
		%M - the number of minutes with leading 0s
		%n - insert a linefeed
		%p - AM or PM strings
		%q - hour using 24-hour style
		%Q - hour using 12-hour style
		%r - same as "%I:%M:%S %p"
		%R - same as "%H:%M"
		%S - number of seconds with leadings 0s
		%t - insert a tab character
		%T - same as "%H:%M:%S"
		%U - week number, taking Sunday as first day of week
		%w - weekday number
		%W - week number, taking Monday as first day of week
		%x - same as "%m/%d/%y"
		%X - same as "%H:%M:%S"
		%y - year using two digits with leading 0s
		%Y - year using four digits with leading 0s
@endnode

@node "Prefs" "Prefs"


    @{b}--- General@{ub}

	@{" General page                    " link "generalpage" 0}
	@{" Flags page                      " link "listerflags" 0}
	@{" Window page                     " link "windowpage" 0}

    @{b}--- Compose list@{ub}

	@{" The two listers and their usage " link "composelists" 0}
	@{" The normal entryeditor          " link "entryeditor" 0}
	@{" The launchermenu entryeditor    " link "launcher" 0}
@endnode

@node "listerflags" "Flags"

    Lister: Window
    ¯¯¯¯¯¯

	@{b}Backgroundtype:@{ub}

	COLOR    Simply displays a color which is selectable on the window
		 Page.

	SNAP     Snaps the actual background on which TinyMeter is opened.
		 Note that TinyMeter will also snap all windows which are
		 under the TinyMeter window.

	FILE     Displays a picture file via datatypes. You can use any
		 pictures like gifs, pngs etc. But prerenderd IFFs are the
		 best for the speed and memoryusage.

	@{b}Windowbehavior@{ub}

	NORMAL   Behave like a normal workbench window.

	ALWAYS TO FRONT
		 Trys to be always in front of all other windows.

	ALWAYS TO BACK
		 Trys to be always behind all other windows.

	@{b}Windowmoving@{ub}

	NORMAL   Window can moved normally. All gadgets work.

	FIXED    Window can't be moved and can't be closed or sized with
		 the gadgets. But you can use the keys(f.ex."Q" to quit)!

	@{b}Borderlook@{ub}

	NONE     Window will have no border

	SIMPLE   draws a simple Rectangle around the window. The color is
		 selectable on the window page.

	STANDARD draws a simple OS2.0 look frame around the window. The
		 colors are selectable on the window page.

	DOUBLE   draws a "ridge" frame around the window. The colors are
		 selectable on the window page.

    Lister: Startup
    ¯¯¯¯¯¯

	@{b}Screennotify.library@{ub}

	YES      turn on usage of screennotify.library. If you change the
		 screenmode or font on your workbench, TinyMeter will
		 recognize this and will close his window to reopen it
		 after the workbench has done its changes.

	NO       disables usage of the library 8))

	@{b}CPU usage@{ub}

	NONE     installs  no  CPU  usage counter. Use this option if you
		 don't want to display the CPU usage. Its useful, since
		 the  CPU  usage  counter takes some processor time.

	OWN      Installs  own  CPU  usage  counter. Its based on the
		 CPULoad2 program.

	EXECUTIVE
		 Uses the sysinfo.library from the Executive package.
		 Note,   that   Executive   must  me  started.  Also,
		 Executive   does   not   automatically  install  the
		 library.  Refer  to  the Executive documentation for
		 this.
@endnode

@node "generalpage" "General page"

    @{b}@{u}Handler@{ub}@{uu}

    @{b}Memoryrefresh@{ub}

	Selects the interval for the memory and cpu display.  If  you  have
	slow machine select a high value.

    @{b}Volumerefresh@{ub}

	Interval of the volumerefresh only.

    @{b}Waittime@{ub}

	The time in seconds, before TinyMeter should open his window.  This
	is useful, if have have many tool in your WBStartup.

    @{b}Task priority@{ub}

	Please select a value under  0.  Otherwise,  TinyMeter  steal  much
	power  from  you  system.  -3  is  the  normal  setting. If you use
	Executive, this value may be changed.

    @{b}@{u}Layout@{ub}@{uu}

    @{b}Colums@{ub}

	How many colums TinyMeter will display.

    @{b}Falling colums@{ub}

	Removes vertical alignment of the colums.

    @{b}SpaceX@{ub}

	Horizontal space in pixels between gauges.

    @{b}SpaceY@{ub}

	Vertical space in pixel between gauges.

    @{b}Bordersize X@{ub}

	Horizontal Bordersize in pixels on both sides of the window.

    @{b}Bordersize Y@{ub}

	Vertical Bordersize in pixels on both sides of the window.
@endnode

@node "windowpage" "Window page"


    @{b}Public screen@{ub}

	The name of the public screen, on which TinyMeter should  open  his
	window.  @{fg shine}@{bg fill}NOTE:@{fg text}@{bg back}  Please select "Workbench" if you want to open it on
	the  Workbench.  Otherwise,  the  screennotify.library  won't  work
	correctly.

    @{b}Window position@{ub}

	all values are in pixels

    @{b}Window size@{ub}

	The width of the window. The height  is  calculated  and  can't  be
	changed.

    @{b}Snap@{ub}

	If you have a running TinyMeter in the background, you can get  the
	actual window position and size with this button.

    @{b}Background picture@{ub}

	Only usable if Backgroundtype was set to "FILE".

    @{b}Background color@{ub}

	Only usable if Backgroundtype was set to "COLOR"  or  a  background
	picture couldn't be loaded.

    @{b}Bright color@{ub}

	Color for the bright edges of the border. It will be also used  for
	the simple border. Please don't use MUI colors!

    @{b}Dark color@{ub}

	Color for the dark edges of the border. Please don't use MUI colors!
@endnode

@node "composelists" "The two listers and their usage"

    TinyMeterPrefs uses the drap & drop system from MUI3.

    @{b}Selecting a type@{ub}

	On the first list (Available types), you  will  see  the  available
	types of gauges. If you want to display a type via TinyMeter simply
	drag the entry to the second list (Selected list), by  holding  the
	mousebutton and moving the entry.

    @{b}Removing an entry@{ub}

	If you want to remove an entry from the second list simply drap the
	entry to the first list.

    @{b}Edit an entry@{ub}

	doubleclick it. Look at Edit Window for the possible settings.
@endnode

@node "entryeditor" "The entryeditor"

    Please look at @{"Tips" link "Tips" 0} for further information.

@{b}--- General@{ub}

    @{b}Type@{ub}

	NORMAL      display a normal gauge

	HISTORYMETER
		    display usage as a graph

    @{b}Label@{ub}

	Description word for the gauge.

    @{b}Height@{ub}

	Adjust height of the gauges.

    @{b}Font@{ub}

	Font to be used for the gauge.

    @{b}Volume@{ub}

	If you selected volume as type, you can select here the  volume  or
	device name. Directorys or assigns will not work.

@{b}--- Flags@{ub}

    Several flags for the design. Simply try them out...

@{b}--- Colors@{ub}

    The colors to be used. Please don't use MUI colors!

@{b}--- Format line@{ub}

    Look at @{"Tips" link "Tips" 0} for fourther informations
@endnode

@node "No" "No!"


    ·   Own translations of the guide

	Its hard to maintain two or three guides myself.

    ·   Gaugetypes which features useless graphics, like a simulation of
	analog levelmeters etc. Its possible, but in my mind totally useless.
@endnode

@node "launcher" "launcher"
@{b}--- Entries@{ub}

    Special feature: This window is an AppWindow. Simply drag icons
    into the list to add entries automatically.

    Lists with only one entry are executed directly without opening
    the submenu before.

    @{b}Command@{ub}         Select the Command which should be runned

    @{b}WB/CLI@{ub}          Select the type for launching programs.

    @{b}Title@{ub}           Label which should appear on the list

    @{b}Pictogram@{ub}       Picturefile which should be displayed

    @{b}Stack@{ub}           Stacksize in bytes

    @{b}Working dir.@{ub}    Working directory.

    @{b}Output@{ub}          Default is NIL:

    @{b}New@{ub}             Add a new entry

    @{b}Remove@{ub}          Remove a selected entry

    @{b}Clone@{ub}           Make a copy of the actual entry

    @{b}Label@{ub}           Label for the gadget.

    @{b}Listfile@{ub}        File where the entries should be saved.
		    This entry IS ESSENTIAL!!

		    NOTE: In this file, most of settings
		    are saved. You can edit these listfiles
		    manually, you can even automize the
		    creating with ARexx scripts...

    @{b}Load@{ub}            Reload a listfile

@{b}--- General@{ub}

    All these flags are nearly the same like the normal entryeditor

@{b}--- Colors@{ub}

    All these flags are nearly the same like the normal entryeditor
@endnode

